{"ast":null,"code":"import axios from 'axios';\nimport { ElMessage } from 'element-plus';\nimport { onMounted, reactive, ref, toRefs } from 'vue';\nexport default {\n  __name: 'BuyListManager',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const state = reactive({\n      buyList: [],\n      total: 0,\n      currentPage: 1,\n      pageSize: 6,\n      buyListDialog: false,\n      buyForm: {\n        productId: '',\n        storeId: '',\n        supplyId: '',\n        placeId: '',\n        itemName: '',\n        storeName: '',\n        supplyName: '',\n        placeName: '',\n        buyUser: '',\n        buyNum: '',\n        factBuyNum: '',\n        phone: '',\n        buyId: ''\n      }\n    });\n\n    // 解构状态以便在模板中直接使用\n    const {\n      buyList,\n      total,\n      currentPage,\n      pageSize,\n      buyListDialog,\n      buyForm\n    } = toRefs(state);\n\n    // 查询采购单列表\n    function queryBuyList(pageNum = 1, pageSizeVal = pageSize.value) {\n      axios.get(`http://localhost:8081/queryBuyList?pageNum=${pageNum}&pageSize=${pageSizeVal}`).then(response => {\n        buyList.value = response.data.buyLists || [];\n        total.value = response.data.total || 0;\n      }).catch(error => {\n        console.error('获取采购单列表失败', error);\n        ElMessage.error('获取采购单列表失败，请稍后重试');\n      });\n    }\n\n    // 生命周期钩子：组件挂载后获取数据\n    onMounted(() => {\n      queryBuyList();\n    });\n\n    // 分页相关方法\n    function handleSizeChange(newSize) {\n      pageSize.value = newSize;\n      queryBuyList(1, newSize);\n    }\n    function handleCurrentChange(newPage) {\n      currentPage.value = newPage;\n      queryBuyList(newPage, pageSize.value);\n    }\n\n    // 显示修改采购单对话框\n    function showBuyListDialog(row) {\n      buyListDialog.value = true;\n      axios.get(`http://localhost:8081/buyAutoInfo/${row.productId}`).then(response => {\n        const item = response.data;\n        Object.assign(buyForm.value, {\n          productId: item.id,\n          itemName: item.itemName,\n          storeId: item.storeId,\n          storeName: item.storeName,\n          supplyId: item.supplyId,\n          supplyName: item.supplyName,\n          placeId: item.placeId,\n          placeName: item.placeName,\n          buyUser: row.buyUser,\n          buyNum: row.buyNum,\n          factBuyNum: row.factBuyNum,\n          phone: row.phone,\n          buyId: row.buyId\n        });\n      }).catch(error => {\n        console.error('获取采购单详情失败', error);\n        ElMessage.error('获取采购单详情失败，请稍后重试');\n      });\n    }\n\n    // 关闭对话框处理\n    function handleClose(done) {\n      done();\n    }\n\n    // 更新采购单\n    function updateBuyOrder() {\n      // 表单验证\n      if (!buyForm.value.buyNum) {\n        ElMessage.warning('请输入预计采购量');\n        return;\n      }\n      if (!buyForm.value.factBuyNum) {\n        ElMessage.warning('请输入实际采购量');\n        return;\n      }\n      if (!buyForm.value.buyUser) {\n        ElMessage.warning('请输入采购人');\n        return;\n      }\n      axios.post('http://localhost:8081/updateBuyList', buyForm.value).then(response => {\n        if (response.data.code === 200) {\n          buyListDialog.value = false;\n          queryBuyList(currentPage.value);\n          ElMessage.success('采购单更新成功');\n        } else {\n          ElMessage.warning(response.data.msg || '采购单更新失败');\n        }\n      }).catch(error => {\n        console.error('更新采购单失败', error);\n        ElMessage.error('更新采购单失败，请稍后重试');\n      });\n    }\n    const __returned__ = {\n      state,\n      buyList,\n      total,\n      currentPage,\n      pageSize,\n      buyListDialog,\n      buyForm,\n      queryBuyList,\n      handleSizeChange,\n      handleCurrentChange,\n      showBuyListDialog,\n      handleClose,\n      updateBuyOrder,\n      get axios() {\n        return axios;\n      },\n      get ElMessage() {\n        return ElMessage;\n      },\n      onMounted,\n      reactive,\n      ref,\n      toRefs\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["axios","ElMessage","onMounted","reactive","ref","toRefs","state","buyList","total","currentPage","pageSize","buyListDialog","buyForm","productId","storeId","supplyId","placeId","itemName","storeName","supplyName","placeName","buyUser","buyNum","factBuyNum","phone","buyId","queryBuyList","pageNum","pageSizeVal","value","get","then","response","data","buyLists","catch","error","console","handleSizeChange","newSize","handleCurrentChange","newPage","showBuyListDialog","row","item","Object","assign","id","handleClose","done","updateBuyOrder","warning","post","code","success","msg"],"sources":["D:/Program/Java QP/Erp/erpfront/src/views/BuyListManager.vue"],"sourcesContent":["<template>\r\n  <div class=\"bg-white rounded-lg shadow-md p-4\">\r\n    <h2 class=\"text-xl font-bold mb-4\">采购单列表</h2>\r\n    <el-table :data=\"buyList\" style=\"width: 100%\" stripe hover-effect>\r\n      <el-table-column prop=\"storeName\" label=\"仓库名称\" min-width=\"120\" />\r\n      <el-table-column prop=\"itemName\" label=\"商品名称\" min-width=\"120\" />\r\n      <el-table-column prop=\"buyNum\" label=\"预计采购数量\" min-width=\"120\" />\r\n      <el-table-column prop=\"factBuyNum\" label=\"实际采购数量\" min-width=\"120\" />\r\n      <el-table-column prop=\"buyUser\" label=\"采购人\" min-width=\"100\" />\r\n      <el-table-column prop=\"buyTime\" label=\"采购时间\" min-width=\"160\" />\r\n      <el-table-column prop=\"phone\" label=\"采购人电话\" min-width=\"120\" />\r\n      <el-table-column prop=\"isIn\" label=\"状态\" width=\"100\">\r\n        <template #default=\"scope\">\r\n          <el-tag :type=\"scope.row.isIn === 0 ? 'danger' : 'success'\">\r\n            {{ scope.row.isIn === 0 ? '未入库' : '已入库' }}\r\n          </el-tag>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column fixed=\"right\" label=\"操作\" width=\"220\">\r\n        <template #default=\"scope\">\r\n          <el-button \r\n            link \r\n            type=\"primary\" \r\n            v-if=\"scope.row.factBuyNum === 0\" \r\n            size=\"small\" \r\n            @click=\"showBuyListDialog(scope.row)\"\r\n          >\r\n            修改\r\n          </el-button>\r\n          <el-button \r\n            link \r\n            type=\"danger\" \r\n            v-if=\"scope.row.factBuyNum === 0\" \r\n            size=\"small\"\r\n          >\r\n            删除\r\n          </el-button>\r\n          <el-button \r\n            link \r\n            type=\"success\" \r\n            v-if=\"scope.row.isIn === 0\" \r\n            size=\"small\"\r\n          >\r\n            生成订单\r\n          </el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n    \r\n    <div class=\"flex justify-between items-center mt-4\">\r\n      <div class=\"text-sm text-gray-500\">\r\n        共 {{ total }} 条记录\r\n      </div>\r\n      <el-pagination\r\n        v-model:current-page=\"currentPage\"\r\n        :page-size=\"pageSize\"\r\n        :pager-count=\"7\"\r\n        layout=\"prev, pager, next, jumper, sizes, total\"\r\n        :total=\"total\"\r\n        @size-change=\"handleSizeChange\"\r\n        @current-change=\"handleCurrentChange\"\r\n      />\r\n    </div>\r\n\r\n    <el-dialog\r\n      v-model=\"buyListDialog\"\r\n      title=\"商品采购\"\r\n      width=\"40%\"\r\n      :before-close=\"handleClose\"\r\n    >\r\n      <template #content>\r\n        <el-form :model=\"buyForm\" label-width=\"120px\">\r\n          <el-form-item label=\"商品名称：\">\r\n            <span class=\"form-value\">{{ buyForm.itemName }}</span>\r\n          </el-form-item>\r\n          <el-form-item label=\"仓库：\">\r\n            <span class=\"form-value\">{{ buyForm.storeName }}</span>\r\n          </el-form-item>\r\n          <el-form-item label=\"供应商：\">\r\n            <span class=\"form-value\">{{ buyForm.supplyName }}</span>\r\n          </el-form-item>\r\n          <el-form-item label=\"产地：\">\r\n            <span class=\"form-value\">{{ buyForm.placeName }}</span>\r\n          </el-form-item>\r\n          <el-form-item label=\"预计采购量：\" required>\r\n            <el-input v-model.number=\"buyForm.buyNum\" style=\"width: 80%;\" />\r\n          </el-form-item>\r\n          <el-form-item label=\"实际采购量：\" required>\r\n            <el-input v-model.number=\"buyForm.factBuyNum\" style=\"width: 80%;\" />\r\n          </el-form-item>\r\n          <el-form-item label=\"采购人：\" required>\r\n            <el-input v-model=\"buyForm.buyUser\" style=\"width: 80%;\" />\r\n          </el-form-item>\r\n          <el-form-item label=\"采购人电话：\">\r\n            <el-input v-model=\"buyForm.phone\" style=\"width: 80%;\" />\r\n          </el-form-item>\r\n        </el-form>\r\n      </template>\r\n      <template #footer>\r\n        <span class=\"dialog-footer\">\r\n          <el-button @click=\"buyListDialog = false\">取消</el-button>\r\n          <el-button type=\"primary\" @click=\"updateBuyOrder\">保存</el-button>\r\n        </span>\r\n      </template>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport axios from 'axios';\r\nimport { ElMessage } from 'element-plus';\r\nimport { onMounted, reactive, ref, toRefs } from 'vue';\r\n\r\nconst state = reactive({\r\n  buyList: [],\r\n  total: 0,\r\n  currentPage: 1,\r\n  pageSize: 6,\r\n  buyListDialog: false,\r\n  buyForm: {\r\n    productId: '',\r\n    storeId: '',\r\n    supplyId: '',\r\n    placeId: '',\r\n    itemName: '',\r\n    storeName: '',\r\n    supplyName: '',\r\n    placeName: '',\r\n    buyUser: '',\r\n    buyNum: '',\r\n    factBuyNum: '',\r\n    phone: '',\r\n    buyId: ''\r\n  }\r\n});\r\n\r\n// 解构状态以便在模板中直接使用\r\nconst { \r\n  buyList, \r\n  total, \r\n  currentPage, \r\n  pageSize, \r\n  buyListDialog, \r\n  buyForm \r\n} = toRefs(state);\r\n\r\n// 查询采购单列表\r\nfunction queryBuyList(pageNum = 1, pageSizeVal = pageSize.value) {\r\n  axios.get(`http://localhost:8081/queryBuyList?pageNum=${pageNum}&pageSize=${pageSizeVal}`)\r\n    .then((response) => {\r\n      buyList.value = response.data.buyLists || [];\r\n      total.value = response.data.total || 0;\r\n    })\r\n    .catch((error) => {\r\n      console.error('获取采购单列表失败', error);\r\n      ElMessage.error('获取采购单列表失败，请稍后重试');\r\n    });\r\n}\r\n\r\n// 生命周期钩子：组件挂载后获取数据\r\nonMounted(() => {\r\n  queryBuyList();\r\n});\r\n\r\n// 分页相关方法\r\nfunction handleSizeChange(newSize) {\r\n  pageSize.value = newSize;\r\n  queryBuyList(1, newSize);\r\n}\r\n\r\nfunction handleCurrentChange(newPage) {\r\n  currentPage.value = newPage;\r\n  queryBuyList(newPage, pageSize.value);\r\n}\r\n\r\n// 显示修改采购单对话框\r\nfunction showBuyListDialog(row) {\r\n  buyListDialog.value = true;\r\n  axios.get(`http://localhost:8081/buyAutoInfo/${row.productId}`)\r\n    .then((response) => {\r\n      const item = response.data;\r\n      Object.assign(buyForm.value, {\r\n        productId: item.id,\r\n        itemName: item.itemName,\r\n        storeId: item.storeId,\r\n        storeName: item.storeName,\r\n        supplyId: item.supplyId,\r\n        supplyName: item.supplyName,\r\n        placeId: item.placeId,\r\n        placeName: item.placeName,\r\n        buyUser: row.buyUser,\r\n        buyNum: row.buyNum,\r\n        factBuyNum: row.factBuyNum,\r\n        phone: row.phone,\r\n        buyId: row.buyId\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      console.error('获取采购单详情失败', error);\r\n      ElMessage.error('获取采购单详情失败，请稍后重试');\r\n    });\r\n}\r\n\r\n// 关闭对话框处理\r\nfunction handleClose(done) {\r\n  done();\r\n}\r\n\r\n// 更新采购单\r\nfunction updateBuyOrder() {\r\n  // 表单验证\r\n  if (!buyForm.value.buyNum) {\r\n    ElMessage.warning('请输入预计采购量');\r\n    return;\r\n  }\r\n  \r\n  if (!buyForm.value.factBuyNum) {\r\n    ElMessage.warning('请输入实际采购量');\r\n    return;\r\n  }\r\n  \r\n  if (!buyForm.value.buyUser) {\r\n    ElMessage.warning('请输入采购人');\r\n    return;\r\n  }\r\n  \r\n  axios.post('http://localhost:8081/updateBuyList', buyForm.value)\r\n    .then((response) => {\r\n      if (response.data.code === 200) {\r\n        buyListDialog.value = false;\r\n        queryBuyList(currentPage.value);\r\n        ElMessage.success('采购单更新成功');\r\n      } else {\r\n        ElMessage.warning(response.data.msg || '采购单更新失败');\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      console.error('更新采购单失败', error);\r\n      ElMessage.error('更新采购单失败，请稍后重试');\r\n    });\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n/* 自定义样式 */\r\n.form-value {\r\n  display: inline-block;\r\n  padding: 4px 8px;\r\n  background-color: #f5f7fa;\r\n  border-radius: 4px;\r\n  min-width: 120px;\r\n}\r\n\r\n/* 动画效果 */\r\n.el-table {\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.el-pagination {\r\n  margin-top: 20px;\r\n}\r\n\r\n/* 响应式布局 */\r\n@media (max-width: 768px) {\r\n  .el-table__header-wrapper,\r\n  .el-table__body-wrapper {\r\n    min-width: 800px;\r\n  }\r\n  \r\n  .el-pagination {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: center;\r\n  }\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}