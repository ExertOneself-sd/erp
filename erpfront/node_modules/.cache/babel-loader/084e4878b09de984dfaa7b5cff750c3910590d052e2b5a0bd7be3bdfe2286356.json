{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"chart-container\"\n};\nconst _hoisted_2 = {\n  ref: \"chartRef\",\n  class: \"w-full h-[500px] bg-white rounded-lg shadow-md\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[0] || (_cache[0] = _createElementVNode(\"h2\", {\n    class: \"text-xl font-bold mb-4\"\n  }, \"客户地区分布\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_2, null, 512 /* NEED_PATCH */)]);\n}","map":{"version":3,"names":["class","ref","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2"],"sources":["D:\\Program\\Java QP\\Erp\\erpfront\\src\\views\\CustomerArea.vue"],"sourcesContent":["<template>\r\n   <div class=\"chart-container\">\r\n    <h2 class=\"text-xl font-bold mb-4\">客户地区分布</h2>\r\n    <div ref=\"chartRef\" class=\"w-full h-[500px] bg-white rounded-lg shadow-md\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport axios from 'axios'\r\nimport * as echarts from 'echarts'\r\nimport { onMounted } from 'vue'\r\n\r\nfunction countCustomerArea(){\r\n    axios.get(\"http://localhost:8081/countCust\")\r\n    .then((response)=>{\r\n    var custDom = document.getElementById('main')\r\n    var custChart = echarts.init(custDom)\r\n    var option = {\r\n        title: {\r\n            text: '客户统计',\r\n            left: 'center'\r\n        },\r\n        tooltip: {\r\n            trigger: 'item',\r\n            formatter: '{a} <br/>{b} : {c} ({d}%)'\r\n        },\r\n        toolbox: {\r\n            show: true,\r\n            feature: {\r\n                mark: { show: true },\r\n                dataView: { show: true, readOnly: false },\r\n                restore: { show: true },\r\n                saveAsImage: { show: true }\r\n            }\r\n        },\r\n        series: [\r\n            {\r\n                name: '客户分布',\r\n                type: 'pie',\r\n                radius: [20, 140],\r\n                center: ['50%', '50%'],\r\n                roseType: 'area',\r\n                itemStyle: {\r\n                    borderRadius: 5\r\n                },\r\n                data:response.data\r\n            }\r\n        ]\r\n    }\r\n    option && custChart.setOption(option)\r\n    })\r\n    .catch((error)=>{\r\n        console.log(error)\r\n    })\r\n\r\n\r\n}\r\n\r\n\r\nonMounted(function(){\r\n    countCustomerArea()\r\n})\r\n\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"],"mappings":";;EACQA,KAAK,EAAC;AAAiB;;EAEtBC,GAAG,EAAC,UAAU;EAACD,KAAK,EAAC;;;uBAF3BE,mBAAA,CAGK,OAHLC,UAGK,G,0BAFJC,mBAAA,CAA8C;IAA1CJ,KAAK,EAAC;EAAwB,GAAC,QAAM,sBACzCI,mBAAA,CAAiF,OAAjFC,UAAiF,8B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}