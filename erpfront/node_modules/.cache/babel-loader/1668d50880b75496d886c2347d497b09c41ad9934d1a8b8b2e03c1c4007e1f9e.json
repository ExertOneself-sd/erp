{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_tree = _resolveComponent(\"el-tree\");\n  const _component_el_card = _resolveComponent(\"el-card\");\n  const _component_el_col = _resolveComponent(\"el-col\");\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  const _component_el_row = _resolveComponent(\"el-row\");\n  return _openBlock(), _createBlock(_component_el_card, {\n    shadow: \"hover\"\n  }, {\n    header: _withCtx(() => _cache[1] || (_cache[1] = [_createElementVNode(\"h2\", null, \"添加菜单\", -1 /* HOISTED */)])),\n    default: _withCtx(() => [_createVNode(_component_el_row, {\n      gutter: 20\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_col, {\n        span: 12\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_card, {\n          shadow: \"never\"\n        }, {\n          header: _withCtx(() => _cache[2] || (_cache[2] = [_createElementVNode(\"div\", {\n            class: \"card-header\"\n          }, \"选择父节点\", -1 /* HOISTED */)])),\n          default: _withCtx(() => [_createVNode(_component_el_tree, {\n            props: $setup.props,\n            data: $setup.treeNodeList,\n            \"node-key\": \"id\",\n            ref: \"treeRef\",\n            onNodeClick: $setup.hanldNodeClick,\n            onCheckChange: _ctx.hanldNodeChange,\n            \"highlight-current\": \"\"\n          }, null, 8 /* PROPS */, [\"data\", \"onCheckChange\"])]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_col, {\n        span: 12\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_card, {\n          shadow: \"never\"\n        }, {\n          header: _withCtx(() => _cache[3] || (_cache[3] = [_createElementVNode(\"div\", {\n            class: \"card-header\"\n          }, \"菜单信息\", -1 /* HOISTED */)])),\n          default: _withCtx(() => [_createVNode(_component_el_form, {\n            model: $setup.menuForm,\n            \"label-width\": \"100px\",\n            rules: $setup.rules,\n            ref: \"formRef\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_form_item, {\n              label: \"菜单名称\",\n              prop: \"label\"\n            }, {\n              default: _withCtx(() => [_createVNode(_component_el_input, {\n                modelValue: $setup.menuForm.label,\n                \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.menuForm.label = $event),\n                placeholder: \"请输入菜单名称\"\n              }, null, 8 /* PROPS */, [\"modelValue\"])]),\n              _: 1 /* STABLE */\n            }), _createVNode(_component_el_form_item, null, {\n              default: _withCtx(() => [_createVNode(_component_el_button, {\n                type: \"primary\",\n                onClick: $setup.subMenuForm\n              }, {\n                default: _withCtx(() => _cache[4] || (_cache[4] = [_createTextVNode(\"确定\")])),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_el_button, {\n                onClick: $setup.resetForm\n              }, {\n                default: _withCtx(() => _cache[5] || (_cache[5] = [_createTextVNode(\"重置\")])),\n                _: 1 /* STABLE */\n              })]),\n              _: 1 /* STABLE */\n            })]),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"model\"])]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createBlock","_component_el_card","shadow","header","_withCtx","_cache","_createElementVNode","default","_createVNode","_component_el_row","gutter","_component_el_col","span","class","_component_el_tree","props","$setup","data","treeNodeList","ref","onNodeClick","hanldNodeClick","onCheckChange","_ctx","hanldNodeChange","_","_component_el_form","model","menuForm","rules","_component_el_form_item","label","prop","_component_el_input","modelValue","$event","placeholder","_component_el_button","type","onClick","subMenuForm","_createTextVNode","resetForm"],"sources":["D:\\Program\\Java QP\\Erp\\erpfront\\src\\views\\AddMenus.vue"],"sourcesContent":["<template>\r\n  <el-card shadow=\"hover\">\r\n    <template #header>\r\n      <h2>添加菜单</h2>\r\n    </template>\r\n    \r\n    <el-row :gutter=\"20\">\r\n      <el-col :span=\"12\">\r\n        <el-card shadow=\"never\">\r\n          <template #header>\r\n            <div class=\"card-header\">选择父节点</div>\r\n          </template>\r\n          <el-tree\r\n            :props=\"props\"\r\n            :data=\"treeNodeList\"\r\n            node-key=\"id\"\r\n            ref=\"treeRef\"\r\n            @node-click=\"hanldNodeClick\"\r\n            @check-change=\"hanldNodeChange\"\r\n            highlight-current\r\n          />\r\n        </el-card>\r\n      </el-col>\r\n      \r\n      <el-col :span=\"12\">\r\n        <el-card shadow=\"never\">\r\n          <template #header>\r\n            <div class=\"card-header\">菜单信息</div>\r\n          </template>\r\n          <el-form \r\n            :model=\"menuForm\" \r\n            label-width=\"100px\" \r\n            :rules=\"rules\"\r\n            ref=\"formRef\"\r\n          >\r\n            <el-form-item label=\"菜单名称\" prop=\"label\">\r\n              <el-input \r\n                v-model=\"menuForm.label\" \r\n                placeholder=\"请输入菜单名称\"\r\n              />\r\n            </el-form-item>\r\n            <el-form-item>\r\n              <el-button type=\"primary\" @click=\"subMenuForm\">确定</el-button>\r\n              <el-button @click=\"resetForm\">重置</el-button>\r\n            </el-form-item>\r\n          </el-form>\r\n        </el-card>\r\n      </el-col>\r\n    </el-row>\r\n  </el-card>\r\n</template>\r\n\r\n<script setup>\r\nimport axios from 'axios';\r\nimport { ElMessage } from 'element-plus';\r\nimport { onMounted, reactive, ref } from 'vue';\r\n\r\nconst props = {\r\n  id: 'id',\r\n  label: 'label',\r\n  children: 'subMenus'\r\n}\r\n\r\nconst rules = {\r\n  label: [\r\n    { required: true, message: '请输入菜单名称', trigger: 'blur' },\r\n    { min: 2, max: 20, message: '长度在2到20个字符', trigger: 'blur' }\r\n  ]\r\n}\r\n\r\nconst treeNodeList = ref([])\r\nconst menuForm = reactive({\r\n    label:''\r\n})\r\n\r\nfunction loadMenuTree() {\r\n  axios.get(\"http://localhost:8081/listMenus\")\r\n  .then((response)=>{\r\n    treeNodeList.value = response.data\r\n  })\r\n  .catch((error)=>{\r\n    console.log(error)\r\n  })\r\n}\r\n\r\nonMounted(function(){\r\n  loadMenuTree()\r\n})\r\n\r\nvar id=0\r\n\r\nfunction hanldNodeClick(node){\r\n    console.log(node)\r\n    id=node.id\r\n}\r\n\r\nfunction subMenuForm(){\r\n    if(id==0){\r\n        ElMessage.warning(\"请先选择父节点\")\r\n        return\r\n    }\r\n    formRef.value.validate((valid) => {\r\n      if(valid){\r\n        menuForm.pid = id\r\n        axios.post(\"http://localhost:8081/saveMenus\",menuForm)\r\n          .then((response)=>{\r\n            if(response.data.code==200){\r\n              loadMenuTree()\r\n              resetForm()\r\n            }\r\n            ElMessage({\r\n              message: response.data.msg,\r\n              type: response.data.code==200 ? 'success' : 'error'\r\n            })\r\n          })\r\n          .catch((error)=>{\r\n            console.log(error)\r\n            ElMessage.error('保存失败')\r\n          })\r\n      }\r\n    })\r\n}\r\n\r\nfunction resetForm() {\r\n  formRef.value.resetFields()\r\n  id = 0\r\n}\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.card-header {\r\n  font-weight: bold;\r\n  font-size: 16px;\r\n}\r\n.el-card {\r\n  margin-bottom: 20px;\r\n}\r\n.el-tree {\r\n  min-height: 300px;\r\n}\r\n</style>"],"mappings":";;;;;;;;;;uBACEA,YAAA,CAgDUC,kBAAA;IAhDDC,MAAM,EAAC;EAAO;IACVC,MAAM,EAAAC,QAAA,CACf,MAAaC,MAAA,QAAAA,MAAA,OAAbC,mBAAA,CAAa,YAAT,MAAI,oB;IAHdC,OAAA,EAAAH,QAAA,CAMI,MA0CS,CA1CTI,YAAA,CA0CSC,iBAAA;MA1CAC,MAAM,EAAE;IAAE;MANvBH,OAAA,EAAAH,QAAA,CAOM,MAeS,CAfTI,YAAA,CAeSG,iBAAA;QAfAC,IAAI,EAAE;MAAE;QAPvBL,OAAA,EAAAH,QAAA,CAQQ,MAaU,CAbVI,YAAA,CAaUP,kBAAA;UAbDC,MAAM,EAAC;QAAO;UACVC,MAAM,EAAAC,QAAA,CACf,MAAoCC,MAAA,QAAAA,MAAA,OAApCC,mBAAA,CAAoC;YAA/BO,KAAK,EAAC;UAAa,GAAC,OAAK,oB;UAV1CN,OAAA,EAAAH,QAAA,CAYU,MAQE,CARFI,YAAA,CAQEM,kBAAA;YAPCC,KAAK,EAAEC,MAAA,CAAAD,KAAK;YACZE,IAAI,EAAED,MAAA,CAAAE,YAAY;YACnB,UAAQ,EAAC,IAAI;YACbC,GAAG,EAAC,SAAS;YACZC,WAAU,EAAEJ,MAAA,CAAAK,cAAc;YAC1BC,aAAY,EAAEC,IAAA,CAAAC,eAAe;YAC9B,mBAAiB,EAAjB;;UAnBZC,CAAA;;QAAAA,CAAA;UAwBMjB,YAAA,CAuBSG,iBAAA;QAvBAC,IAAI,EAAE;MAAE;QAxBvBL,OAAA,EAAAH,QAAA,CAyBQ,MAqBU,CArBVI,YAAA,CAqBUP,kBAAA;UArBDC,MAAM,EAAC;QAAO;UACVC,MAAM,EAAAC,QAAA,CACf,MAAmCC,MAAA,QAAAA,MAAA,OAAnCC,mBAAA,CAAmC;YAA9BO,KAAK,EAAC;UAAa,GAAC,MAAI,oB;UA3BzCN,OAAA,EAAAH,QAAA,CA6BU,MAgBU,CAhBVI,YAAA,CAgBUkB,kBAAA;YAfPC,KAAK,EAAEX,MAAA,CAAAY,QAAQ;YAChB,aAAW,EAAC,OAAO;YAClBC,KAAK,EAAEb,MAAA,CAAAa,KAAK;YACbV,GAAG,EAAC;;YAjChBZ,OAAA,EAAAH,QAAA,CAmCY,MAKe,CALfI,YAAA,CAKesB,uBAAA;cALDC,KAAK,EAAC,MAAM;cAACC,IAAI,EAAC;;cAnC5CzB,OAAA,EAAAH,QAAA,CAoCc,MAGE,CAHFI,YAAA,CAGEyB,mBAAA;gBAvChBC,UAAA,EAqCyBlB,MAAA,CAAAY,QAAQ,CAACG,KAAK;gBArCvC,uBAAA1B,MAAA,QAAAA,MAAA,MAAA8B,MAAA,IAqCyBnB,MAAA,CAAAY,QAAQ,CAACG,KAAK,GAAAI,MAAA;gBACvBC,WAAW,EAAC;;cAtC5BX,CAAA;gBAyCYjB,YAAA,CAGesB,uBAAA;cA5C3BvB,OAAA,EAAAH,QAAA,CA0Cc,MAA6D,CAA7DI,YAAA,CAA6D6B,oBAAA;gBAAlDC,IAAI,EAAC,SAAS;gBAAEC,OAAK,EAAEvB,MAAA,CAAAwB;;gBA1ChDjC,OAAA,EAAAH,QAAA,CA0C6D,MAAEC,MAAA,QAAAA,MAAA,OA1C/DoC,gBAAA,CA0C6D,IAAE,E;gBA1C/DhB,CAAA;kBA2CcjB,YAAA,CAA4C6B,oBAAA;gBAAhCE,OAAK,EAAEvB,MAAA,CAAA0B;cAAS;gBA3C1CnC,OAAA,EAAAH,QAAA,CA2C4C,MAAEC,MAAA,QAAAA,MAAA,OA3C9CoC,gBAAA,CA2C4C,IAAE,E;gBA3C9ChB,CAAA;;cAAAA,CAAA;;YAAAA,CAAA;;UAAAA,CAAA;;QAAAA,CAAA;;MAAAA,CAAA;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}