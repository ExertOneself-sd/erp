{"ast":null,"code":"import AddCustomer from \"@/views/AddCustomer\";\nimport ListCustomer from \"@/views/ListCustomer\";\nimport { onMounted, ref } from \"vue\";\nimport axios from 'axios';\n\n//声明数组保存所有组件\n\nexport default {\n  __name: 'index',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const views = [AddCustomer, ListCustomer];\n    //声明变量保存当前需要显示的组件名\n    const currentComponent = ref(views[0]);\n    //声明菜单对象集合数据\n    const menus = ref([]);\n    /*menu组件选中叶子节点触发的函数，参数index：菜单节点的index值，对应数据库菜单节点的id*/\n    const handlerSelect = function (id) {\n      console.log(id);\n      //发生ajax请求，加载组件下标\n      axios.get(\"http://localhost:8081/compIndex?id=\" + id).then(response => {\n        //动态该currentComponent赋值,从组件集合views中获取的组件名字\n        currentComponent.value = views[response.data];\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n    //页面加载，发生ajax请求加载左侧菜单信息\n    onMounted(function () {\n      axios.get(\"http://localhost:8081/listMenus\").then(response => {\n        console.log(response);\n        //将响应的数据绑定到menus，实现数据渲染\n        menus.value = response.data;\n      }).catch(error => {\n        console.log(error);\n      });\n    });\n    const __returned__ = {\n      views,\n      currentComponent,\n      menus,\n      handlerSelect,\n      get AddCustomer() {\n        return AddCustomer;\n      },\n      get ListCustomer() {\n        return ListCustomer;\n      },\n      onMounted,\n      ref,\n      get axios() {\n        return axios;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["AddCustomer","ListCustomer","onMounted","ref","axios","views","currentComponent","menus","handlerSelect","id","console","log","get","then","response","value","data","catch","error"],"sources":["D:/Program/Web QP/vue/erpfront/src/views/index.vue"],"sourcesContent":["<template>\n  <!-- 后台主页布局 -->\n  <div class=\"common-layout\">\n    <el-container>\n      <el-header class=\"top\">ERP系统</el-header>\n      <el-container   >\n        <el-aside width=\"240px\" class=\"left\">\n          系统菜单\n\n          <!--添加Menu菜单组件-->\n          <el-menu\n              class=\"el-menu-vertical-demo\" @select=\"handlerSelect\" >\n            <el-sub-menu v-for=\"menu in menus\" :index=\"String(menu.id)\">\n              <template #title>\n                <span>{{ menu.label }}</span>\n              </template>\n              <el-menu-item v-for=\"subMenu in menu.subMenus\"  :index=\"String(subMenu.id)\">\n                {{subMenu.label}}\n              </el-menu-item>\n\n            </el-sub-menu>\n\n          </el-menu>\n        </el-aside>\n        <el-main class=\"right\">\n            <!--通过点击左边菜单，动态显示不同组件 -->\n<!--           <component :is=\"currentComponent\"></component>-->\n          <transition name=\"fade\" mode=\"out-in\">\n            <component :is=\"currentComponent\"></component>\n          </transition>\n        </el-main>\n      </el-container>\n    </el-container>\n  </div>\n</template>\n\n\n<script setup>\n  import AddCustomer from \"@/views/AddCustomer\";\n  import ListCustomer from \"@/views/ListCustomer\";\n  import {onMounted, ref} from \"vue\";\n  import axios from 'axios';\n\n  //声明数组保存所有组件\n  const views=[AddCustomer,ListCustomer]\n  //声明变量保存当前需要显示的组件名\n  const currentComponent=ref(views[0]);\n  //声明菜单对象集合数据\n  const menus=ref([]);\n  /*menu组件选中叶子节点触发的函数，参数index：菜单节点的index值，对应数据库菜单节点的id*/\n  const  handlerSelect=function(id){\n    console.log(id);\n    //发生ajax请求，加载组件下标\n    axios.get(\"http://localhost:8081/compIndex?id=\"+id)\n    .then((response)=>{\n      //动态该currentComponent赋值,从组件集合views中获取的组件名字\n      currentComponent.value=views[response.data];\n    })\n    .catch((error)=>{\n          console.log(error);\n    });\n\n  }\n  //页面加载，发生ajax请求加载左侧菜单信息\n  onMounted(function(){\n    axios.get(\"http://localhost:8081/listMenus\")\n    .then((response)=>{\n      console.log(response);\n      //将响应的数据绑定到menus，实现数据渲染\n      menus.value=response.data;\n    })\n    .catch((error)=>{\n      console.log(error);\n    });\n  });\n</script>\n\n<style scoped>\n:root {\n  --header-bg-color: #007bff; /* 顶部栏背景色，采用常见的主题蓝色，更显专业 */\n  --sidebar-bg-color: #343a40; /* 侧边栏背景色，深色系，与整体风格契合，增加层次感 */\n  --sidebar-text-color: #e0e0e0; /* 侧边栏文字颜色，淡色系方便阅读 */\n  --main-bg-color: #f8f9fa; /* 主内容区域背景色，柔和的浅灰色 */\n  --main-text-color: #333; /* 主内容区域文字颜色，常用的深灰色，保证可读性 */\n  --active-menu-color: #0056b3; /* 菜单激活状态颜色，与顶部栏颜色呼应的深色 */\n  --hover-menu-color: #495057; /* 菜单悬停颜色，适中的深灰色 */\n  --border-color: #dee2e6; /* 通用边框颜色，淡灰色用于区分不同区域 */\n}\n\n/* 通用布局样式 */\n.common-layout {\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n}\n\n/* 顶部栏样式 */\n.top {\n  background-color: var(--header-bg-color);\n  color: white;\n  padding: 15px 20px;\n  display: flex;\n  align-items: center;\n  font-size: 18px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.12);\n}\n\n/* 侧边栏样式 */\n.left {\n  background-color: var(--sidebar-bg-color);\n  height: calc(100vh - 60px);\n  color: var(--sidebar-text-color);\n  transition: width 0.3s;\n  border-right: 1px solid var(--border-color); /* 添加右侧边框，区分与内容区 */\n}\n\n/* 主内容区域样式 */\n.right {\n  background-color: var(--main-bg-color);\n  padding: 20px;\n  min-height: calc(100vh - 60px);\n  overflow: auto;\n}\n\n/* 菜单整体样式 */\n.el-menu {\n  border-right: none;\n  background-color: transparent;\n}\n\n/* 菜单选项样式 */\n.el-menu-item,\n.el-sub-menu__title {\n  color: var(--sidebar-text-color);\n}\n\n/* 菜单选项悬停效果 */\n.el-menu-item:hover,\n.el-sub-menu__title:hover {\n  background-color: var(--hover-menu-color)!important;\n  cursor: pointer; /* 添加鼠标悬停指针样式，增强交互感 */\n}\n\n/* 菜单选项激活效果 */\n.el-menu-item.is-active {\n  background-color: var(--active-menu-color)!important;\n  color: white;\n}\n\n/* 组件切换动画 */\n.fade-enter-active,\n.fade-leave-active {\n  transition: opacity 0.3s ease;\n}\n\n.fade-enter-from,\n.fade-leave-to {\n  opacity: 0;\n}\n\n/* 响应式设计 */\n@media (max-width: 768px) {\n .el-aside {\n    width: 180px!important;\n  }\n  \n .el-menu-vertical-demo:not(.el-menu--collapse) {\n    width: 180px;\n  }\n  \n .top {\n    font-size: 16px;\n    padding: 0 10px;\n  }\n  \n .right {\n    padding: 10px;\n  }\n}\n\n</style>"],"mappings":"AAsCE,OAAOA,WAAW,MAAM,qBAAqB;AAC7C,OAAOC,YAAY,MAAM,sBAAsB;AAC/C,SAAQC,SAAS,EAAEC,GAAG,QAAO,KAAK;AAClC,OAAOC,KAAK,MAAM,OAAO;;AAEzB;;;;;;;;IACA,MAAMC,KAAK,GAAC,CAACL,WAAW,EAACC,YAAY;IACrC;IACA,MAAMK,gBAAgB,GAACH,GAAG,CAACE,KAAK,CAAC,CAAC,CAAC,CAAC;IACpC;IACA,MAAME,KAAK,GAACJ,GAAG,CAAC,EAAE,CAAC;IACnB;IACA,MAAOK,aAAa,GAAC,SAAAA,CAASC,EAAE,EAAC;MAC/BC,OAAO,CAACC,GAAG,CAACF,EAAE,CAAC;MACf;MACAL,KAAK,CAACQ,GAAG,CAAC,qCAAqC,GAACH,EAAE,EACjDI,IAAI,CAAEC,QAAQ,IAAG;QAChB;QACAR,gBAAgB,CAACS,KAAK,GAACV,KAAK,CAACS,QAAQ,CAACE,IAAI,CAAC;MAC7C,CAAC,EACAC,KAAK,CAAEC,KAAK,IAAG;QACVR,OAAO,CAACC,GAAG,CAACO,KAAK,CAAC;MACxB,CAAC,CAAC;IAEJ;IACA;IACAhB,SAAS,CAAC,YAAU;MAClBE,KAAK,CAACQ,GAAG,CAAC,iCAAiC,EAC1CC,IAAI,CAAEC,QAAQ,IAAG;QAChBJ,OAAO,CAACC,GAAG,CAACG,QAAQ,CAAC;QACrB;QACAP,KAAK,CAACQ,KAAK,GAACD,QAAQ,CAACE,IAAI;MAC3B,CAAC,EACAC,KAAK,CAAEC,KAAK,IAAG;QACdR,OAAO,CAACC,GAAG,CAACO,KAAK,CAAC;MACpB,CAAC,CAAC;IACJ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}