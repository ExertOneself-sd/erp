{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_button = _resolveComponent(\"el-button\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_cache[2] || (_cache[2] = _createElementVNode(\"h2\", null, \"投诉统计\", -1 /* HOISTED */)), _createVNode(_component_el_button, {\n    type: \"success\",\n    onClick: $setup.questionType\n  }, {\n    default: _withCtx(() => _cache[0] || (_cache[0] = [_createTextVNode(\"投诉类型统计\")])),\n    _: 1 /* STABLE */\n  }), _createVNode(_component_el_button, {\n    type: \"success\",\n    onClick: $setup.questionState\n  }, {\n    default: _withCtx(() => _cache[1] || (_cache[1] = [_createTextVNode(\"回复状态统计\")])),\n    _: 1 /* STABLE */\n  }), _cache[3] || (_cache[3] = _createElementVNode(\"hr\", null, null, -1 /* HOISTED */)), _cache[4] || (_cache[4] = _createElementVNode(\"div\", {\n    id: \"questionInfo\",\n    style: {\n      \"width\": \"100%\",\n      \"height\": \"450px\"\n    }\n  }, null, -1 /* HOISTED */))], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementBlock","_Fragment","_createElementVNode","_createVNode","_component_el_button","type","onClick","$setup","questionType","default","_withCtx","_cache","_createTextVNode","_","questionState","id","style"],"sources":["D:\\Program\\Java QP\\Erp\\erpfront\\src\\views\\AfterSaleCount.vue"],"sourcesContent":["<template>\r\n  <h2>投诉统计</h2>\r\n  <el-button type=\"success\" @click=\"questionType\">投诉类型统计</el-button>\r\n  <el-button type=\"success\" @click=\"questionState\">回复状态统计</el-button>\r\n  <hr/>\r\n  <div id=\"questionInfo\" style=\"width: 100%;height: 450px;\"></div>\r\n</template>\r\n\r\n<script setup>\r\nimport axios from 'axios';\r\nimport * as echarts from 'echarts'\r\nimport { onMounted } from 'vue';\r\n\r\n\r\nfunction questionType(){\r\n    axios.get(\"http://localhost:8081/countQuestionType\")\r\n    .then((response)=>{\r\n    var questionDao=document.getElementById(\"questionInfo\")\r\n    var typeECharts=echarts.init(questionDao)\r\n    var option = {\r\n        tooltip: {\r\n            trigger: 'item'\r\n        },\r\n        legend: {\r\n            top: '5%',\r\n            left: 'center'\r\n        },\r\n        series: [\r\n            {\r\n                name: '投诉问题统计',\r\n                type: 'pie',\r\n                radius: ['40%', '70%'],\r\n                avoidLabelOverlap: false,\r\n                padAngle: 5,\r\n                itemStyle: {\r\n                    borderRadius: 10\r\n                },\r\n                label: {\r\n                    show: false,\r\n                    position: 'center'\r\n                },\r\n                emphasis: {\r\n                    label: {\r\n                        show: true,\r\n                        fontSize: 40,\r\n                        fontWeight: 'bold'\r\n                    }\r\n                },\r\n                labelLine: {\r\n                    show: false\r\n                },\r\n                data: response.data\r\n\r\n            }\r\n        ]\r\n    }\r\n    option && typeECharts.setOption(option)\r\n    })\r\n    .catch((error)=>{\r\n        console.log(error)\r\n    })\r\n}\r\n\r\nonMounted(function(){\r\n    questionType()\r\n})\r\n\r\nfunction questionState(){\r\n    axios.get(\"http://localhost:8081/countQuestionState\")\r\n    .then((response)=>{\r\n    var questionDao=document.getElementById(\"questionInfo\")\r\n    var typeECharts=echarts.init(questionDao)\r\n    var option = {\r\n        tooltip: {\r\n            trigger: 'item'\r\n        },\r\n        legend: {\r\n            top: '5%',\r\n            left: 'center'\r\n        },\r\n        series: [\r\n            {\r\n                name: '投诉状态统计',\r\n                type: 'pie',\r\n                radius: ['40%', '70%'],\r\n                avoidLabelOverlap: false,\r\n                padAngle: 5,\r\n                itemStyle: {\r\n                    borderRadius: 10\r\n                },\r\n                label: {\r\n                    show: false,\r\n                    position: 'center'\r\n                },\r\n                emphasis: {\r\n                    label: {\r\n                        show: true,\r\n                        fontSize: 40,\r\n                        fontWeight: 'bold'\r\n                    }\r\n                },\r\n                labelLine: {\r\n                    show: false\r\n                },\r\n                data: response.data\r\n\r\n            }\r\n        ]\r\n    }\r\n    option && typeECharts.setOption(option)\r\n    })\r\n    .catch((error)=>{\r\n        console.log(error)\r\n    })\r\n}\r\n\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"],"mappings":";;;uBAAAA,mBAAA,CAAAC,SAAA,S,0BACEC,mBAAA,CAAa,YAAT,MAAI,sBACRC,YAAA,CAAkEC,oBAAA;IAAvDC,IAAI,EAAC,SAAS;IAAEC,OAAK,EAAEC,MAAA,CAAAC;;IAFpCC,OAAA,EAAAC,QAAA,CAEkD,MAAMC,MAAA,QAAAA,MAAA,OAFxDC,gBAAA,CAEkD,QAAM,E;IAFxDC,CAAA;MAGEV,YAAA,CAAmEC,oBAAA;IAAxDC,IAAI,EAAC,SAAS;IAAEC,OAAK,EAAEC,MAAA,CAAAO;;IAHpCL,OAAA,EAAAC,QAAA,CAGmD,MAAMC,MAAA,QAAAA,MAAA,OAHzDC,gBAAA,CAGmD,QAAM,E;IAHzDC,CAAA;gCAIEX,mBAAA,CAAK,sC,0BACLA,mBAAA,CAAgE;IAA3Da,EAAE,EAAC,cAAc;IAACC,KAAkC,EAAlC;MAAA;MAAA;IAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}