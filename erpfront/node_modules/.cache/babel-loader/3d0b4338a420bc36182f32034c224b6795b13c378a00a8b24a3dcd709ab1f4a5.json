{"ast":null,"code":"import AddCustomer from \"@/views/AddCustomer\";\nimport ListCustomer from \"@/views/ListCustomer\";\nimport { onMounted, ref } from \"vue\";\nimport axios from 'axios';\n\n//声明数组保存所有组件\n\nexport default {\n  __name: 'index',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const views = [AddCustomer, ListCustomer];\n    //声明变量保存当前需要显示的组件名\n    const currentComponent = ref(views[0]);\n    //声明菜单对象集合数据\n    const menus = ref([]);\n    /*menu组件选中叶子节点触发的函数，参数index：菜单节点的index值，对应数据库菜单节点的id*/\n    // 添加加载状态\n    const isLoading = ref(false);\n    const handlerSelect = function (id) {\n      isLoading.value = true;\n      console.log(id);\n      // 发生ajax请求，加载组件下标\n      axios.get(\"http://localhost:8081/compIndex?id=\" + id).then(response => {\n        // 动态该currentComponent赋值,从组件集合views中获取的组件名字\n        currentComponent.value = views[response.data];\n      }).catch(error => {\n        console.error('组件加载失败:', error);\n        // 显示错误提示\n        ElMessage.error('组件加载失败，请稍后重试');\n      }).finally(() => {\n        isLoading.value = false;\n      });\n    };\n    //页面加载，发生ajax请求加载左侧菜单信息\n    onMounted(function () {\n      axios.get(\"http://localhost:8081/listMenus\").then(response => {\n        console.log(response);\n        //将响应的数据绑定到menus，实现数据渲染\n        menus.value = response.data;\n      }).catch(error => {\n        console.log(error);\n      });\n    });\n    const __returned__ = {\n      views,\n      currentComponent,\n      menus,\n      isLoading,\n      handlerSelect,\n      get AddCustomer() {\n        return AddCustomer;\n      },\n      get ListCustomer() {\n        return ListCustomer;\n      },\n      onMounted,\n      ref,\n      get axios() {\n        return axios;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["AddCustomer","ListCustomer","onMounted","ref","axios","views","currentComponent","menus","isLoading","handlerSelect","id","value","console","log","get","then","response","data","catch","error","ElMessage","finally"],"sources":["D:/Program/Web QP/vue/erpfront/src/views/index.vue"],"sourcesContent":["<template>\n  <!-- 后台主页布局 -->\n  <div class=\"common-layout\">\n    <el-container>\n      <el-header class=\"top\">ERP系统</el-header>\n      <el-container   >\n        <el-aside width=\"240px\" class=\"left\">\n          系统菜单\n\n          <!--添加Menu菜单组件-->\n          <el-menu\n              class=\"el-menu-vertical-demo\" @select=\"handlerSelect\" >\n            <el-sub-menu v-for=\"menu in menus\" :index=\"String(menu.id)\">\n              <template #title>\n                <span>{{ menu.label }}</span>\n              </template>.\n              \n              <el-menu-item v-for=\"subMenu in menu.subMenus\"  :index=\"String(subMenu.id)\">\n                {{subMenu.label}}\n              </el-menu-item>\n\n            </el-sub-menu>\n\n          </el-menu>\n        </el-aside>\n        <el-main class=\"right\">\n          <!-- 加载状态指示器 -->\n          <el-skeleton :loading=\"isLoading\" animated>\n            <template #default>\n              <!--通过点击左边菜单，动态显示不同组件 -->\n              <transition name=\"fade\" mode=\"out-in\">\n                <component :is=\"currentComponent\"></component>\n              </transition>\n            </template>\n          </el-skeleton>\n        </el-main>\n      </el-container>\n    </el-container>\n  </div>\n</template>\n\n\n<script setup>\n  import AddCustomer from \"@/views/AddCustomer\";\n  import ListCustomer from \"@/views/ListCustomer\";\n  import {onMounted, ref} from \"vue\";\n  import axios from 'axios';\n\n  //声明数组保存所有组件\n  const views=[AddCustomer,ListCustomer]\n  //声明变量保存当前需要显示的组件名\n  const currentComponent=ref(views[0]);\n  //声明菜单对象集合数据\n  const menus=ref([]);\n  /*menu组件选中叶子节点触发的函数，参数index：菜单节点的index值，对应数据库菜单节点的id*/\n  // 添加加载状态\n  const isLoading = ref(false);\n  \n  const handlerSelect = function(id) {\n    isLoading.value = true;\n    console.log(id);\n    // 发生ajax请求，加载组件下标\n    axios.get(\"http://localhost:8081/compIndex?id=\"+id)\n    .then((response)=>{\n      // 动态该currentComponent赋值,从组件集合views中获取的组件名字\n      currentComponent.value = views[response.data];\n    })\n    .catch((error)=>{\n      console.error('组件加载失败:', error);\n      // 显示错误提示\n      ElMessage.error('组件加载失败，请稍后重试');\n    })\n    .finally(() => {\n      isLoading.value = false;\n    });\n\n  }\n  //页面加载，发生ajax请求加载左侧菜单信息\n  onMounted(function(){\n    axios.get(\"http://localhost:8081/listMenus\")\n    .then((response)=>{\n      console.log(response);\n      //将响应的数据绑定到menus，实现数据渲染\n      menus.value=response.data;\n    })\n    .catch((error)=>{\n      console.log(error);\n    });\n  });\n</script>\n\n<style scoped>\n  .top {\n    background-color: #2c3e50;\n    color: white;\n    padding: 15px 20px;\n    font-size: 18px;\n    box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n  }\n  .left {\n    background-color: #34495e;\n    color: white;\n    height: calc(100vh - 60px);\n  }\n  .right {\n    background-color: #f5f7fa;\n    padding: 20px;\n  }\n  .el-menu {\n    background-color: transparent;\n    border-right: none;\n  }\n  .el-menu-item, .el-sub-menu__title {\n    color: #ecf0f1;\n  }\n  .el-menu-item:hover, .el-sub-menu__title:hover {\n    background-color: rgba(255,255,255,0.1);\n  }\n\n/* 组件切换动画 */\n.fade-enter-active,\n.fade-leave-active {\n  transition: opacity 0.3s ease;\n}\n\n.fade-enter-from,\n.fade-leave-to {\n  opacity: 0;\n}\n\n/* 响应式设计 */\n@media (max-width: 768px) {\n  .el-aside {\n    width: 180px !important;\n  }\n  \n  .el-menu-vertical-demo:not(.el-menu--collapse) {\n    width: 180px;\n    color: #000;\n  }\n  \n  .top {\n    font-size: 16px;\n    padding: 0 10px;\n  }\n  \n  .right {\n    padding: 10px;\n  }\n}\n\n</style>"],"mappings":"AA2CE,OAAOA,WAAW,MAAM,qBAAqB;AAC7C,OAAOC,YAAY,MAAM,sBAAsB;AAC/C,SAAQC,SAAS,EAAEC,GAAG,QAAO,KAAK;AAClC,OAAOC,KAAK,MAAM,OAAO;;AAEzB;;;;;;;;IACA,MAAMC,KAAK,GAAC,CAACL,WAAW,EAACC,YAAY;IACrC;IACA,MAAMK,gBAAgB,GAACH,GAAG,CAACE,KAAK,CAAC,CAAC,CAAC,CAAC;IACpC;IACA,MAAME,KAAK,GAACJ,GAAG,CAAC,EAAE,CAAC;IACnB;IACA;IACA,MAAMK,SAAS,GAAGL,GAAG,CAAC,KAAK,CAAC;IAE5B,MAAMM,aAAa,GAAG,SAAAA,CAASC,EAAE,EAAE;MACjCF,SAAS,CAACG,KAAK,GAAG,IAAI;MACtBC,OAAO,CAACC,GAAG,CAACH,EAAE,CAAC;MACf;MACAN,KAAK,CAACU,GAAG,CAAC,qCAAqC,GAACJ,EAAE,EACjDK,IAAI,CAAEC,QAAQ,IAAG;QAChB;QACAV,gBAAgB,CAACK,KAAK,GAAGN,KAAK,CAACW,QAAQ,CAACC,IAAI,CAAC;MAC/C,CAAC,EACAC,KAAK,CAAEC,KAAK,IAAG;QACdP,OAAO,CAACO,KAAK,CAAC,SAAS,EAAEA,KAAK,CAAC;QAC/B;QACAC,SAAS,CAACD,KAAK,CAAC,cAAc,CAAC;MACjC,CAAC,EACAE,OAAO,CAAC,MAAM;QACbb,SAAS,CAACG,KAAK,GAAG,KAAK;MACzB,CAAC,CAAC;IAEJ;IACA;IACAT,SAAS,CAAC,YAAU;MAClBE,KAAK,CAACU,GAAG,CAAC,iCAAiC,EAC1CC,IAAI,CAAEC,QAAQ,IAAG;QAChBJ,OAAO,CAACC,GAAG,CAACG,QAAQ,CAAC;QACrB;QACAT,KAAK,CAACI,KAAK,GAACK,QAAQ,CAACC,IAAI;MAC3B,CAAC,EACAC,KAAK,CAAEC,KAAK,IAAG;QACdP,OAAO,CAACC,GAAG,CAACM,KAAK,CAAC;MACpB,CAAC,CAAC;IACJ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}