{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, normalizeClass as _normalizeClass, createVNode as _createVNode, withCtx as _withCtx, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, normalizeStyle as _normalizeStyle, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"login-container\"\n};\nconst _hoisted_2 = {\n  class: \"login-footer\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_card = _resolveComponent(\"el-card\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 背景装饰元素 \"), _cache[7] || (_cache[7] = _createElementVNode(\"div\", {\n    class: \"bg-pattern\"\n  }, null, -1 /* HOISTED */)), _createVNode(_component_el_card, {\n    class: \"login-card\",\n    shadow: \"hover\"\n  }, {\n    default: _withCtx(() => [_createCommentVNode(\" 标题区域，添加图标增强识别度 \"), _cache[6] || (_cache[6] = _createElementVNode(\"div\", {\n      class: \"login-header\"\n    }, [_createElementVNode(\"i\", {\n      class: \"el-icon-s-home\",\n      style: {\n        \"font-size\": \"60px\",\n        \"margin-right\": \"15px\"\n      }\n    }), _createElementVNode(\"span\", {\n      class: \"title-text\"\n    }, \"ERP系统\")], -1 /* HOISTED */)), _createVNode(_component_el_form, {\n      ref: \"loginForm\",\n      model: $setup.loginUser,\n      size: \"large\",\n      \"label-position\": \"right\",\n      \"label-width\": \"80px\",\n      class: \"login-form\"\n    }, {\n      default: _withCtx(() => [_createCommentVNode(\" 账号输入框，添加图标和焦点效果 \"), _createVNode(_component_el_form_item, {\n        label: \"账号\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $setup.loginUser.uname,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.loginUser.uname = $event),\n          \"prefix-icon\": \"el-icon-user\",\n          placeholder: \"请输入账号\",\n          class: _normalizeClass({\n            'focused': $setup.isFocused.uname\n          }),\n          onFocus: _cache[1] || (_cache[1] = $event => $setup.isFocused.uname = true),\n          onBlur: _cache[2] || (_cache[2] = $event => $setup.isFocused.uname = false)\n        }, null, 8 /* PROPS */, [\"modelValue\", \"class\"])]),\n        _: 1 /* STABLE */\n      }), _createCommentVNode(\" 密码输入框，添加图标和焦点效果 \"), _createVNode(_component_el_form_item, {\n        label: \"密码\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          type: \"password\",\n          modelValue: $setup.loginUser.upwd,\n          \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $setup.loginUser.upwd = $event),\n          \"show-password\": \"\",\n          \"prefix-icon\": \"el-icon-lock\",\n          placeholder: \"请输入密码\",\n          class: _normalizeClass({\n            'focused': $setup.isFocused.upwd\n          }),\n          onFocus: _cache[4] || (_cache[4] = $event => $setup.isFocused.upwd = true),\n          onBlur: _cache[5] || (_cache[5] = $event => $setup.isFocused.upwd = false)\n        }, null, 8 /* PROPS */, [\"modelValue\", \"class\"])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"model\"]), _createCommentVNode(\" 登录按钮区域，添加加载状态和动画效果 \"), _createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_el_button, {\n      onClick: $setup.userLogin,\n      type: \"primary\",\n      size: \"large\",\n      loading: $setup.isLoading,\n      class: \"login-button\",\n      style: _normalizeStyle({\n        width: $setup.isLoading ? '100px' : '300px'\n      })\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.isLoading ? '登录中...' : '登 录'), 1 /* TEXT */)]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"loading\", \"style\"])])]),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createCommentVNode","_createElementVNode","_createVNode","_component_el_card","shadow","default","_withCtx","style","_component_el_form","ref","model","$setup","loginUser","size","_component_el_form_item","label","_component_el_input","modelValue","uname","_cache","$event","placeholder","_normalizeClass","isFocused","onFocus","onBlur","_","type","upwd","_hoisted_2","_component_el_button","onClick","userLogin","loading","isLoading","_normalizeStyle","width","_createTextVNode","_toDisplayString"],"sources":["D:\\Program\\Java QP\\Erp\\erpfront\\src\\views\\login.vue"],"sourcesContent":["<template>\r\n  <div class=\"login-container\">\r\n    <!-- 背景装饰元素 -->\r\n    <div class=\"bg-pattern\"></div>\r\n    \r\n    <el-card class=\"login-card\" shadow=\"hover\">\r\n      <!-- 标题区域，添加图标增强识别度 -->\r\n      <div class=\"login-header\">\r\n        <i class=\"el-icon-s-home\" style=\"font-size: 60px; margin-right: 15px;\"></i>\r\n        <span class=\"title-text\">ERP系统</span>\r\n      </div>\r\n      \r\n      <el-form\r\n        ref=\"loginForm\"\r\n        :model=\"loginUser\"\r\n        size=\"large\"\r\n        label-position=\"right\"\r\n        label-width=\"80px\"\r\n        class=\"login-form\"\r\n      >\r\n        <!-- 账号输入框，添加图标和焦点效果 -->\r\n        <el-form-item label=\"账号\">\r\n          <el-input \r\n            v-model=\"loginUser.uname\"\r\n            prefix-icon=\"el-icon-user\"\r\n            placeholder=\"请输入账号\"\r\n            :class=\"{ 'focused': isFocused.uname }\"\r\n            @focus=\"isFocused.uname = true\"\r\n            @blur=\"isFocused.uname = false\"\r\n          >\r\n          </el-input>\r\n        </el-form-item>\r\n        \r\n        <!-- 密码输入框，添加图标和焦点效果 -->\r\n        <el-form-item label=\"密码\">\r\n          <el-input \r\n            type=\"password\" \r\n            v-model=\"loginUser.upwd\" \r\n            show-password\r\n            prefix-icon=\"el-icon-lock\"\r\n            placeholder=\"请输入密码\"\r\n            :class=\"{ 'focused': isFocused.upwd }\"\r\n            @focus=\"isFocused.upwd = true\"\r\n            @blur=\"isFocused.upwd = false\"\r\n          >\r\n          </el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      \r\n      <!-- 登录按钮区域，添加加载状态和动画效果 -->\r\n      <div class=\"login-footer\">\r\n        <el-button\r\n          @click=\"userLogin\"\r\n          type=\"primary\"\r\n          size=\"large\"\r\n          :loading=\"isLoading\"\r\n          class=\"login-button\"\r\n          :style=\"{ width: isLoading ? '100px' : '300px' }\"\r\n        >\r\n          {{ isLoading ? '登录中...' : '登 录' }}\r\n        </el-button>\r\n      </div>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { reactive, ref, onMounted } from \"vue\";\r\nimport { useRouter } from \"vue-router\";\r\nimport { ElMessage } from \"element-plus\";\r\nimport { getCurrentInstance } from \"vue\";\r\nconst axios = getCurrentInstance().proxy.axios;\r\n\r\nconst router = useRouter();\r\nconst loginForm = ref();\r\nconst isLoading = ref(false); // 登录加载状态\r\nconst isFocused = ref({ uname: false, upwd: false }); // 输入框焦点状态\r\n\r\nconst loginUser = reactive({\r\n  uname: \"admin\", // 默认值便于测试\r\n  upwd: \"123456\"\r\n});\r\n\r\n// 登录功能优化，添加加载状态和错误处理\r\nfunction userLogin() {\r\n  if (!loginUser.uname || !loginUser.upwd) {\r\n    ElMessage({\r\n      message: \"账号和密码不能为空\",\r\n      type: \"warning\"\r\n    });\r\n    return;\r\n  }\r\n  \r\n  isLoading.value = true;\r\n  axios.post(\"http://localhost:8081/userLogin\", loginUser)\r\n    .then((response) => {\r\n      isLoading.value = false;\r\n      if (response.data.code == 200) {\r\n        // 登录成功，添加过渡效果\r\n        ElMessage({\r\n          message: \"登录成功\",\r\n          type: \"success\",\r\n          onClose: () => {\r\n            router.push({ name: \"index\" });\r\n          }\r\n        });\r\n      } else {\r\n        ElMessage(response.data.msg);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      isLoading.value = false;\r\n      console.log(error);\r\n      ElMessage({\r\n        message: \"登录失败，请稍后再试\",\r\n        type: \"error\"\r\n      });\r\n    });\r\n}\r\n\r\n// 页面加载时添加动画效果\r\nonMounted(() => {\r\n  const card = document.querySelector('.login-card');\r\n  if (card) {\r\n    card.style.opacity = '0';\r\n    card.style.transform = 'translateY(20px)';\r\n    card.style.transition = 'all 0.5s ease';\r\n    \r\n    setTimeout(() => {\r\n      card.style.opacity = '1';\r\n      card.style.transform = 'translateY(0)';\r\n    }, 300);\r\n  }\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n/* 全局背景样式，添加渐变和装饰图案 */\r\n.login-container {\r\n  position: relative;\r\n  min-height: 100vh;\r\n  background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 20px;\r\n}\r\n\r\n.bg-pattern {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-image: \r\n    radial-gradient(circle at 20% 30%, rgba(64, 158, 255, 0.1) 0%, transparent 20%),\r\n    radial-gradient(circle at 80% 70%, rgba(64, 158, 255, 0.1) 0%, transparent 20%);\r\n  z-index: 1;\r\n}\r\n\r\n/* 登录卡片优化，添加阴影和圆角 */\r\n.login-card {\r\n  position: relative;\r\n  z-index: 2;\r\n  border-radius: 12px;\r\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.login-card:hover {\r\n  box-shadow: 0 15px 35px rgba(0, 0, 0, 0.15);\r\n}\r\n\r\n/* 标题区域样式 */\r\n.login-header {\r\n  padding: 40px 0 50px 0;\r\n  text-align: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n\r\n.title-text {\r\n  color: #409eff;\r\n  font-size: 42px;\r\n  font-weight: bold;\r\n  letter-spacing: 2px;\r\n  margin-top: 10px;\r\n  text-shadow: 0 2px 4px rgba(64, 158, 255, 0.1);\r\n}\r\n\r\n/* 表单样式优化，增加间距和焦点效果 */\r\n.login-form {\r\n  width: 100%;\r\n  max-width: 400px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.el-form-item {\r\n  margin-bottom: 25px;\r\n}\r\n\r\n.el-input {\r\n  border-radius: 8px;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.el-input.focused {\r\n  box-shadow: 0 0 0 3px rgba(64, 158, 255, 0.2);\r\n  border-color: #409eff;\r\n}\r\n\r\n.el-input__prefix {\r\n  color: #909399;\r\n}\r\n\r\n/* 按钮样式优化，添加动画和状态效果 */\r\n.login-footer {\r\n  padding: 20px 0 40px;\r\n  text-align: center;\r\n}\r\n\r\n.login-button {\r\n  border-radius: 8px;\r\n  font-size: 18px;\r\n  font-weight: 500;\r\n  transition: all 0.3s ease;\r\n  box-shadow: 0 4px 12px rgba(64, 158, 255, 0.3);\r\n}\r\n\r\n.login-button:hover {\r\n  background-color: #3a8ee6;\r\n  transform: translateY(-2px);\r\n  box-shadow: 0 6px 16px rgba(64, 158, 255, 0.4);\r\n}\r\n\r\n.login-button:active {\r\n  transform: translateY(1px);\r\n  box-shadow: 0 2px 8px rgba(64, 158, 255, 0.3);\r\n}\r\n\r\n/* 响应式设计，小屏幕下调整布局 */\r\n@media (max-width: 450px) {\r\n  .title-text {\r\n    font-size: 36px;\r\n  }\r\n  \r\n  .login-form {\r\n    max-width: 320px;\r\n  }\r\n  \r\n  .login-button {\r\n    width: 100% !important;\r\n  }\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}