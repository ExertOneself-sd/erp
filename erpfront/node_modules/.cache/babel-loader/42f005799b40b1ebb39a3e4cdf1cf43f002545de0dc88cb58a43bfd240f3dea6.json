{"ast":null,"code":"import * as echarts from 'echarts';\nimport { onMounted, ref } from \"vue\";\nimport axios from \"axios\";\n//声明dom容器的引用\n\nexport default {\n  __name: 'Test',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const chartContainer = ref(null);\n\n    //定义函数完成图表的渲染\n    function countSellData() {\n      //创建echars对象\n      const myCharts = echarts.init(chartContainer.value);\n\n      //发送ajax请求，获得需要渲染的数据\n      axios.get(\"http://localhost:8081/countSell\").then(response => {\n        const option = {\n          xAxis: {\n            type: 'category',\n            data: response.data.xdata\n          },\n          yAxis: {\n            type: 'value'\n          },\n          series: [{\n            data: response.data.ydata,\n            type: 'bar',\n            showBackground: true,\n            backgroundStyle: {\n              color: 'rgba(180, 180, 180, 0.2)'\n            }\n          }]\n        };\n        //渲染图表\n        myCharts.setOption(option);\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n    onMounted(function () {\n      countSellData();\n    });\n    const __returned__ = {\n      chartContainer,\n      countSellData,\n      get echarts() {\n        return echarts;\n      },\n      onMounted,\n      ref,\n      get axios() {\n        return axios;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["echarts","onMounted","ref","axios","chartContainer","countSellData","myCharts","init","value","get","then","response","option","xAxis","type","data","xdata","yAxis","series","ydata","showBackground","backgroundStyle","color","setOption","catch","error","console","log"],"sources":["D:/Program/Java QP/Erp/erpfront/src/views/Test.vue"],"sourcesContent":["<template>\r\n  <!-- div用来显示echarts控件的DOM容器 -->\r\n  <div ref=\"chartContainer\" style=\"width: 100%; height: 400px;\"></div>\r\n</template>\r\n\r\n<script setup>\r\nimport * as echarts from 'echarts';\r\nimport {onMounted, ref} from \"vue\";\r\nimport axios from \"axios\";\r\n//声明dom容器的引用\r\nconst chartContainer = ref(null);\r\n\r\n//定义函数完成图表的渲染\r\nfunction countSellData() {\r\n  //创建echars对象\r\n  const myCharts = echarts.init(chartContainer.value);\r\n\r\n\r\n  //发送ajax请求，获得需要渲染的数据\r\n  axios.get(\"http://localhost:8081/countSell\")\r\n      .then((response) => {\r\n\r\n        const option = {\r\n          xAxis: {\r\n            type: 'category',\r\n            data: response.data.xdata\r\n          },\r\n          yAxis: {\r\n            type: 'value'\r\n          },\r\n          series: [\r\n            {\r\n              data: response.data.ydata,\r\n              type: 'bar',\r\n              showBackground: true,\r\n              backgroundStyle: {\r\n                color: 'rgba(180, 180, 180, 0.2)'\r\n              }\r\n            }\r\n          ]\r\n        };\r\n        //渲染图表\r\n        myCharts.setOption(option);\r\n\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n      });\r\n}\r\n\r\nonMounted(function () {\r\n  countSellData();\r\n});\r\n</script>"],"mappings":"AAMA,OAAO,KAAKA,OAAO,MAAM,SAAS;AAClC,SAAQC,SAAS,EAAEC,GAAG,QAAO,KAAK;AAClC,OAAOC,KAAK,MAAM,OAAO;AACzB;;;;;;;;IACA,MAAMC,cAAc,GAAGF,GAAG,CAAC,IAAI,CAAC;;IAEhC;IACA,SAASG,aAAaA,CAAA,EAAG;MACvB;MACA,MAAMC,QAAQ,GAAGN,OAAO,CAACO,IAAI,CAACH,cAAc,CAACI,KAAK,CAAC;;MAGnD;MACAL,KAAK,CAACM,GAAG,CAAC,iCAAiC,CAAC,CACvCC,IAAI,CAAEC,QAAQ,IAAK;QAElB,MAAMC,MAAM,GAAG;UACbC,KAAK,EAAE;YACLC,IAAI,EAAE,UAAU;YAChBC,IAAI,EAAEJ,QAAQ,CAACI,IAAI,CAACC;UACtB,CAAC;UACDC,KAAK,EAAE;YACLH,IAAI,EAAE;UACR,CAAC;UACDI,MAAM,EAAE,CACN;YACEH,IAAI,EAAEJ,QAAQ,CAACI,IAAI,CAACI,KAAK;YACzBL,IAAI,EAAE,KAAK;YACXM,cAAc,EAAE,IAAI;YACpBC,eAAe,EAAE;cACfC,KAAK,EAAE;YACT;UACF,CAAC;QAEL,CAAC;QACD;QACAhB,QAAQ,CAACiB,SAAS,CAACX,MAAM,CAAC;MAE5B,CAAC,CAAC,CACDY,KAAK,CAAEC,KAAK,IAAK;QAChBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACpB,CAAC,CAAC;IACR;IAEAxB,SAAS,CAAC,YAAY;MACpBI,aAAa,CAAC,CAAC;IACjB,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}