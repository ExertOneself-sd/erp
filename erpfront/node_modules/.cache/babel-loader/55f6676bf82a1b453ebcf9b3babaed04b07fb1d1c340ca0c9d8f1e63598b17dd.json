{"ast":null,"code":"import AddCustomer from \"@/views/AddCustomer\";\nimport ListCustomer from \"@/views/ListCustomer\";\nimport { ref } from \"vue\";\n\n//声明数组保存所有组件\n\nexport default {\n  __name: 'index',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const views = [AddCustomer, ListCustomer];\n    //声明变量保存当前需要显示的组件名\n    const currentComponent = ref(views[0]);\n    /*menu组件选中叶子节点触发的函数，参数index：菜单节点的index值，对应数据库菜单节点的id*/\n    const handlerSelect = function (index) {\n      console.log(index);\n      //动态该currentComponent赋值,从组件集合views中获取的组件名字\n      currentComponent.value = views[index];\n    };\n    const __returned__ = {\n      views,\n      currentComponent,\n      handlerSelect,\n      get AddCustomer() {\n        return AddCustomer;\n      },\n      get ListCustomer() {\n        return ListCustomer;\n      },\n      ref\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["AddCustomer","ListCustomer","ref","views","currentComponent","handlerSelect","index","console","log","value"],"sources":["D:/Program/Web QP/vue/erpfront/src/views/index.vue"],"sourcesContent":["<template>\n  <!-- 后台主页布局 -->\n  <div class=\"common-layout\">\n    <el-container>\n      <el-header class=\"top\">ERP-欢乐斗地主小组</el-header>\n      <el-container   >\n        <el-aside width=\"240px\" class=\"left\">\n          系统菜单\n\n          <!--添加Menu菜单组件-->\n          <el-menu\n              class=\"el-menu-vertical-demo\" @select=\"handlerSelect\" >\n            <el-sub-menu index=\"9\">\n              <template #title>\n                <span>客户管理</span>\n              </template>\n              <el-menu-item   index=\"0\">\n                添加客户\n              </el-menu-item>\n              <el-menu-item   index=\"1\">\n                客户查询\n              </el-menu-item>\n              <el-menu-item   index=\"4\">\n                客户投诉\n              </el-menu-item>\n              <el-menu-item   index=\"5\">\n                客户开发\n              </el-menu-item>\n\n            </el-sub-menu>\n\n            <el-sub-menu index=\"2\">\n              <template #title>\n                <span>商品管理</span>\n              </template>\n              <el-menu-item   index=\"21\">\n                添加商品\n              </el-menu-item>\n              <el-menu-item   index=\"22\">\n                商品查询\n              </el-menu-item>\n              <el-menu-item   index=\"23\">\n                商品统计\n              </el-menu-item>\n              <el-menu-item   index=\"24\">\n                热销商品\n              </el-menu-item>\n\n            </el-sub-menu>\n\n\n          </el-menu>\n\n        </el-aside>\n        <el-main class=\"right\">\n            <!--通过点击左边菜单，动态显示不同组件 -->\n<!--           <component :is=\"currentComponent\"></component>-->\n          <component :is=\"currentComponent\"></component>\n        </el-main>\n      </el-container>\n    </el-container>\n  </div>\n</template>\n\n\n<script setup>\n  import AddCustomer from \"@/views/AddCustomer\";\n  import ListCustomer from \"@/views/ListCustomer\";\n  import {ref} from \"vue\";\n\n  //声明数组保存所有组件\n  const views=[AddCustomer,ListCustomer]\n  //声明变量保存当前需要显示的组件名\n  const currentComponent=ref(views[0]);\n  /*menu组件选中叶子节点触发的函数，参数index：菜单节点的index值，对应数据库菜单节点的id*/\n  const  handlerSelect=function(index){\n    console.log(index);\n    //动态该currentComponent赋值,从组件集合views中获取的组件名字\n    currentComponent.value=views[index];\n  }\n\n</script>\n\n<style scoped>\n  .top{\n    background-color: azure;\n  }\n  .left{\n    background-color: blanchedalmond;\n    height: 600px;\n  }\n  .right{\n    background-color: cornsilk;\n  }\n\n</style>"],"mappings":"AAkEE,OAAOA,WAAW,MAAM,qBAAqB;AAC7C,OAAOC,YAAY,MAAM,sBAAsB;AAC/C,SAAQC,GAAG,QAAO,KAAK;;AAEvB;;;;;;;;IACA,MAAMC,KAAK,GAAC,CAACH,WAAW,EAACC,YAAY;IACrC;IACA,MAAMG,gBAAgB,GAACF,GAAG,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;IACpC;IACA,MAAOE,aAAa,GAAC,SAAAA,CAASC,KAAK,EAAC;MAClCC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MAClB;MACAF,gBAAgB,CAACK,KAAK,GAACN,KAAK,CAACG,KAAK,CAAC;IACrC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}