{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, reactive, toRefs } from 'vue';\nimport { useRouter } from 'vue-router';\n\n// 表单数据\n\nexport default {\n  __name: 'login',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const formData = reactive({\n      email: '',\n      password: ''\n    });\n\n    // 错误信息\n    const emailError = ref('');\n    const passwordError = ref('');\n    const showPassword = ref(false);\n    const router = useRouter();\n\n    // 验证邮箱\n    const validateEmail = () => {\n      const {\n        email\n      } = formData;\n      if (!email) {\n        emailError.value = 'Email is required';\n      } else if (!/^\\S+@\\S+\\.\\S+$/.test(email)) {\n        emailError.value = 'Please enter a valid email address';\n      } else {\n        emailError.value = '';\n      }\n    };\n\n    // 验证密码\n    const validatePassword = () => {\n      const {\n        password\n      } = formData;\n      if (!password) {\n        passwordError.value = 'Password is required';\n      } else if (password.length < 8) {\n        passwordError.value = 'Password must be at least 8 characters';\n      } else {\n        passwordError.value = '';\n      }\n    };\n\n    // 表单验证\n    const validateForm = () => {\n      validateEmail();\n      validatePassword();\n      return !emailError.value && !passwordError.value;\n    };\n\n    // 登录处理\n    const handleLogin = async () => {\n      if (!validateForm()) return;\n      try {\n        // 模拟API调用\n        console.log('Logging in with:', formData);\n\n        // 这里应该是实际的API调用\n        // const response = await axios.post('/api/login', formData);\n\n        // 模拟成功响应\n        await new Promise(resolve => setTimeout(resolve, 1000));\n\n        // 登录成功后跳转到主页\n        router.push('/dashboard');\n      } catch (error) {\n        console.error('Login failed:', error);\n        // 显示错误信息\n        alert('Login failed. Please check your credentials.');\n      }\n    };\n    const __returned__ = {\n      formData,\n      emailError,\n      passwordError,\n      showPassword,\n      router,\n      validateEmail,\n      validatePassword,\n      validateForm,\n      handleLogin,\n      ref,\n      reactive,\n      toRefs,\n      get useRouter() {\n        return useRouter;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","reactive","toRefs","useRouter","formData","email","password","emailError","passwordError","showPassword","router","validateEmail","value","test","validatePassword","length","validateForm","handleLogin","console","log","Promise","resolve","setTimeout","push","error","alert"],"sources":["D:/Program/Java QP/Erp/erpfront/src/views/login.vue"],"sourcesContent":["<template>\r\n  <div class=\"login-container flex items-center justify-center min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 p-4\">\r\n    <!-- 背景装饰元素 -->\r\n    <div class=\"absolute inset-0 overflow-hidden -z-10\">\r\n      <div class=\"absolute -top-40 -right-40 w-80 h-80 bg-blue-400 rounded-full opacity-10 blur-3xl\"></div>\r\n      <div class=\"absolute -bottom-40 -left-40 w-80 h-80 bg-indigo-400 rounded-full opacity-10 blur-3xl\"></div>\r\n    </div>\r\n    \r\n    <!-- 登录卡片 -->\r\n    <div class=\"login-card bg-white rounded-2xl shadow-2xl w-full max-w-md overflow-hidden transition-all duration-500 hover:shadow-blue-100/50\">\r\n      <!-- 卡片顶部装饰 -->\r\n      <div class=\"card-header h-3 bg-gradient-to-r from-blue-500 to-indigo-600\"></div>\r\n      \r\n      <!-- 登录表单 -->\r\n      <div class=\"p-8\">\r\n        <!-- 品牌标识 -->\r\n        <div class=\"text-center mb-8\">\r\n          <div class=\"w-16 h-16 bg-gradient-to-br from-blue-500 to-indigo-600 rounded-xl flex items-center justify-center mx-auto mb-4 shadow-lg shadow-blue-200/50\">\r\n            <i class=\"fa fa-lock text-white text-2xl\"></i>\r\n          </div>\r\n          <h2 class=\"text-2xl font-bold text-gray-800\">Welcome Back</h2>\r\n          <p class=\"text-gray-500 mt-1\">Sign in to your account</p>\r\n        </div>\r\n        \r\n        <!-- 表单 -->\r\n        <form @submit.prevent=\"handleLogin\" class=\"space-y-6\">\r\n          <!-- 邮箱输入 -->\r\n          <div class=\"space-y-2\">\r\n            <label for=\"email\" class=\"block text-sm font-medium text-gray-700\">Email Address</label>\r\n            <div class=\"relative\">\r\n              <div class=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\r\n                <i class=\"fa fa-envelope text-gray-400\"></i>\r\n              </div>\r\n              <input\r\n                type=\"email\"\r\n                id=\"email\"\r\n                v-model=\"email\"\r\n                @blur=\"validateEmail\"\r\n                class=\"block w-full pl-10 pr-3 py-3 rounded-lg border border-gray-300 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200\"\r\n                placeholder=\"your.email@example.com\"\r\n              >\r\n            </div>\r\n            <p v-if=\"emailError\" class=\"text-red-500 text-sm\">{{ emailError }}</p>\r\n          </div>\r\n          \r\n          <!-- 密码输入 -->\r\n          <div class=\"space-y-2\">\r\n            <div class=\"flex justify-between\">\r\n              <label for=\"password\" class=\"block text-sm font-medium text-gray-700\">Password</label>\r\n              <a href=\"#\" class=\"text-sm text-blue-600 hover:text-blue-500 transition-colors\">Forgot password?</a>\r\n            </div>\r\n            <div class=\"relative\">\r\n              <div class=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\r\n                <i class=\"fa fa-lock text-gray-400\"></i>\r\n              </div>\r\n              <input\r\n                :type=\"showPassword ? 'text' : 'password'\"\r\n                id=\"password\"\r\n                v-model=\"password\"\r\n                @blur=\"validatePassword\"\r\n                class=\"block w-full pl-10 pr-10 py-3 rounded-lg border border-gray-300 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200\"\r\n                placeholder=\"••••••••\"\r\n              >\r\n              <div \r\n                class=\"absolute inset-y-0 right-0 pr-3 flex items-center cursor-pointer\"\r\n                @click=\"showPassword = !showPassword\"\r\n              >\r\n                <i :class=\"showPassword ? 'fa fa-eye-slash text-gray-400' : 'fa fa-eye text-gray-400'\"></i>\r\n              </div>\r\n            </div>\r\n            <p v-if=\"passwordError\" class=\"text-red-500 text-sm\">{{ passwordError }}</p>\r\n          </div>\r\n          \r\n          <!-- 记住我 -->\r\n          <div class=\"flex items-center\">\r\n            <input\r\n              id=\"remember\"\r\n              type=\"checkbox\"\r\n              class=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\r\n            >\r\n            <label for=\"remember\" class=\"ml-2 block text-sm text-gray-700\">Remember me</label>\r\n          </div>\r\n          \r\n          <!-- 登录按钮 -->\r\n          <button\r\n            type=\"submit\"\r\n            class=\"w-full bg-gradient-to-r from-blue-500 to-indigo-600 text-white py-3 px-4 rounded-lg font-medium shadow-lg shadow-blue-200/50 hover:shadow-xl hover:shadow-blue-300/50 transform hover:-translate-y-0.5 transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\r\n          >\r\n            Sign In\r\n          </button>\r\n          \r\n          <!-- 分隔线 -->\r\n          <div class=\"relative flex items-center justify-center\">\r\n            <div class=\"flex-grow border-t border-gray-300\"></div>\r\n            <span class=\"flex-shrink mx-4 text-gray-500 text-sm\">or continue with</span>\r\n            <div class=\"flex-grow border-t border-gray-300\"></div>\r\n          </div>\r\n          \r\n          <!-- 社交登录按钮 -->\r\n          <div class=\"grid grid-cols-3 gap-4\">\r\n            <button\r\n              type=\"button\"\r\n              class=\"flex items-center justify-center border border-gray-300 rounded-lg py-2 px-4 hover:bg-gray-50 transition-colors\"\r\n            >\r\n              <i class=\"fa fa-google text-red-500\"></i>\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              class=\"flex items-center justify-center border border-gray-300 rounded-lg py-2 px-4 hover:bg-gray-50 transition-colors\"\r\n            >\r\n              <i class=\"fa fa-facebook text-blue-600\"></i>\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              class=\"flex items-center justify-center border border-gray-300 rounded-lg py-2 px-4 hover:bg-gray-50 transition-colors\"\r\n            >\r\n              <i class=\"fa fa-twitter text-blue-400\"></i>\r\n            </button>\r\n          </div>\r\n          \r\n          <!-- 注册链接 -->\r\n          <p class=\"text-center text-gray-500 text-sm\">\r\n            Don't have an account? \r\n            <router-link to=\"/register\" class=\"text-blue-600 hover:text-blue-500 font-medium transition-colors\">Sign up</router-link>\r\n          </p>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, reactive, toRefs } from 'vue';\r\nimport { useRouter } from 'vue-router';\r\n\r\n// 表单数据\r\nconst formData = reactive({\r\n  email: '',\r\n  password: ''\r\n});\r\n\r\n// 错误信息\r\nconst emailError = ref('');\r\nconst passwordError = ref('');\r\nconst showPassword = ref(false);\r\nconst router = useRouter();\r\n\r\n// 验证邮箱\r\nconst validateEmail = () => {\r\n  const { email } = formData;\r\n  if (!email) {\r\n    emailError.value = 'Email is required';\r\n  } else if (!/^\\S+@\\S+\\.\\S+$/.test(email)) {\r\n    emailError.value = 'Please enter a valid email address';\r\n  } else {\r\n    emailError.value = '';\r\n  }\r\n};\r\n\r\n// 验证密码\r\nconst validatePassword = () => {\r\n  const { password } = formData;\r\n  if (!password) {\r\n    passwordError.value = 'Password is required';\r\n  } else if (password.length < 8) {\r\n    passwordError.value = 'Password must be at least 8 characters';\r\n  } else {\r\n    passwordError.value = '';\r\n  }\r\n};\r\n\r\n// 表单验证\r\nconst validateForm = () => {\r\n  validateEmail();\r\n  validatePassword();\r\n  return !emailError.value && !passwordError.value;\r\n};\r\n\r\n// 登录处理\r\nconst handleLogin = async () => {\r\n  if (!validateForm()) return;\r\n  \r\n  try {\r\n    // 模拟API调用\r\n    console.log('Logging in with:', formData);\r\n    \r\n    // 这里应该是实际的API调用\r\n    // const response = await axios.post('/api/login', formData);\r\n    \r\n    // 模拟成功响应\r\n    await new Promise(resolve => setTimeout(resolve, 1000));\r\n    \r\n    // 登录成功后跳转到主页\r\n    router.push('/dashboard');\r\n  } catch (error) {\r\n    console.error('Login failed:', error);\r\n    // 显示错误信息\r\n    alert('Login failed. Please check your credentials.');\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* 全局样式 */\r\n.login-container {\r\n  font-family: 'Inter', system-ui, sans-serif;\r\n}\r\n\r\n/* 卡片悬停效果 */\r\n.login-card {\r\n  transform: translateY(0);\r\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\r\n}\r\n\r\n.login-card:hover {\r\n  transform: translateY(-5px);\r\n}\r\n\r\n/* 输入框聚焦动画 */\r\ninput:focus {\r\n  transform: scale(1.01);\r\n}\r\n\r\n/* 按钮动画 */\r\nbutton {\r\n  position: relative;\r\n  overflow: hidden;\r\n}\r\n\r\nbutton::after {\r\n  content: '';\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  width: 5px;\r\n  height: 5px;\r\n  background: rgba(255, 255, 255, 0.5);\r\n  opacity: 0;\r\n  border-radius: 100%;\r\n  transform: scale(1, 1) translate(-50%);\r\n  transform-origin: 50% 50%;\r\n}\r\n\r\n@keyframes ripple {\r\n  0% {\r\n    transform: scale(0, 0);\r\n    opacity: 1;\r\n  }\r\n  20% {\r\n    transform: scale(25, 25);\r\n    opacity: 1;\r\n  }\r\n  100% {\r\n    opacity: 0;\r\n    transform: scale(40, 40);\r\n  }\r\n}\r\n\r\nbutton:focus:not(:active)::after {\r\n  animation: ripple 1s ease-out;\r\n}\r\n\r\n/* 响应式设计 */\r\n@media (max-width: 640px) {\r\n  .login-card {\r\n    max-width: 90%;\r\n  }\r\n}\r\n</style>\r\n"],"mappings":";AAoIA,SAASA,GAAG,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,KAAK;AAC3C,SAASC,SAAS,QAAQ,YAAY;;AAEtC;;;;;;;;IACA,MAAMC,QAAQ,GAAGH,QAAQ,CAAC;MACxBI,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE;IACZ,CAAC,CAAC;;IAEF;IACA,MAAMC,UAAU,GAAGP,GAAG,CAAC,EAAE,CAAC;IAC1B,MAAMQ,aAAa,GAAGR,GAAG,CAAC,EAAE,CAAC;IAC7B,MAAMS,YAAY,GAAGT,GAAG,CAAC,KAAK,CAAC;IAC/B,MAAMU,MAAM,GAAGP,SAAS,CAAC,CAAC;;IAE1B;IACA,MAAMQ,aAAa,GAAGA,CAAA,KAAM;MAC1B,MAAM;QAAEN;MAAM,CAAC,GAAGD,QAAQ;MAC1B,IAAI,CAACC,KAAK,EAAE;QACVE,UAAU,CAACK,KAAK,GAAG,mBAAmB;MACxC,CAAC,MAAM,IAAI,CAAC,gBAAgB,CAACC,IAAI,CAACR,KAAK,CAAC,EAAE;QACxCE,UAAU,CAACK,KAAK,GAAG,oCAAoC;MACzD,CAAC,MAAM;QACLL,UAAU,CAACK,KAAK,GAAG,EAAE;MACvB;IACF,CAAC;;IAED;IACA,MAAME,gBAAgB,GAAGA,CAAA,KAAM;MAC7B,MAAM;QAAER;MAAS,CAAC,GAAGF,QAAQ;MAC7B,IAAI,CAACE,QAAQ,EAAE;QACbE,aAAa,CAACI,KAAK,GAAG,sBAAsB;MAC9C,CAAC,MAAM,IAAIN,QAAQ,CAACS,MAAM,GAAG,CAAC,EAAE;QAC9BP,aAAa,CAACI,KAAK,GAAG,wCAAwC;MAChE,CAAC,MAAM;QACLJ,aAAa,CAACI,KAAK,GAAG,EAAE;MAC1B;IACF,CAAC;;IAED;IACA,MAAMI,YAAY,GAAGA,CAAA,KAAM;MACzBL,aAAa,CAAC,CAAC;MACfG,gBAAgB,CAAC,CAAC;MAClB,OAAO,CAACP,UAAU,CAACK,KAAK,IAAI,CAACJ,aAAa,CAACI,KAAK;IAClD,CAAC;;IAED;IACA,MAAMK,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI,CAACD,YAAY,CAAC,CAAC,EAAE;MAErB,IAAI;QACF;QACAE,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEf,QAAQ,CAAC;;QAEzC;QACA;;QAEA;QACA,MAAM,IAAIgB,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAE,IAAI,CAAC,CAAC;;QAEvD;QACAX,MAAM,CAACa,IAAI,CAAC,YAAY,CAAC;MAC3B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdN,OAAO,CAACM,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;QACrC;QACAC,KAAK,CAAC,8CAA8C,CAAC;MACvD;IACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}