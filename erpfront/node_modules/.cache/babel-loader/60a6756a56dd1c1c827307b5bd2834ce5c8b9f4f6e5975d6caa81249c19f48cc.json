{"ast":null,"code":"import AddCustomer from \"@/views/AddCustomer\";\nimport ListCustomer from \"@/views/ListCustomer\";\nimport { onMounted, ref } from \"vue\";\nimport axios from 'axios';\nimport { ElMessage, ElLoading } from 'element-plus';\n\n// 声明数组保存所有组件\n\nexport default {\n  __name: 'index',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const views = [AddCustomer, ListCustomer];\n    // 声明变量保存当前需要显示的组件名\n    const currentComponent = ref(views[0]);\n    // 声明菜单对象集合数据\n    const menus = ref([]);\n    // 加载状态\n    const loading = ref(false);\n\n    /* 菜单选中处理函数 */\n    const handlerSelect = async id => {\n      loading.value = true;\n      try {\n        const {\n          data\n        } = await axios.get(\"http://localhost:8081/compIndex?id=\" + id);\n        currentComponent.value = views[data];\n      } catch (error) {\n        ElMessage.error('加载组件失败: ' + error.message);\n        console.error('加载组件失败:', error);\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // 页面加载时获取菜单数据\n    onMounted(async () => {\n      const loadingInstance = ElLoading.service({\n        lock: true,\n        text: '加载菜单中...',\n        background: 'rgba(0, 0, 0, 0.7)'\n      });\n      try {\n        const {\n          data\n        } = await axios.get(\"http://localhost:8081/listMenus\");\n        menus.value = data;\n      } catch (error) {\n        ElMessage.error('加载菜单失败: ' + error.message);\n        console.error('加载菜单失败:', error);\n      } finally {\n        loadingInstance.close();\n      }\n    });\n    const __returned__ = {\n      views,\n      currentComponent,\n      menus,\n      loading,\n      handlerSelect,\n      get AddCustomer() {\n        return AddCustomer;\n      },\n      get ListCustomer() {\n        return ListCustomer;\n      },\n      onMounted,\n      ref,\n      get axios() {\n        return axios;\n      },\n      get ElMessage() {\n        return ElMessage;\n      },\n      get ElLoading() {\n        return ElLoading;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["AddCustomer","ListCustomer","onMounted","ref","axios","ElMessage","ElLoading","views","currentComponent","menus","loading","handlerSelect","id","value","data","get","error","message","console","loadingInstance","service","lock","text","background","close"],"sources":["D:/Program/Web QP/vue/erpfront/src/views/index.vue"],"sourcesContent":["<template>\n  <!-- 后台主页布局 -->\n  <div class=\"common-layout\">\n    <el-container>\n      <el-header class=\"top\">ERP系统</el-header>\n      <el-container   >\n        <el-aside width=\"240px\" class=\"left\">\n          系统菜单\n\n          <!--添加Menu菜单组件-->\n          <el-menu\n              class=\"el-menu-vertical-demo\" @select=\"handlerSelect\" >\n            <el-sub-menu v-for=\"menu in menus\" :index=\"String(menu.id)\">\n              <template #title>\n                <span>{{ menu.label }}</span>\n              </template>\n              <el-menu-item v-for=\"subMenu in menu.subMenus\"  :index=\"String(subMenu.id)\">\n                {{subMenu.label}}\n              </el-menu-item>\n\n            </el-sub-menu>\n\n          </el-menu>\n        </el-aside>\n        <el-main class=\"right\">\n          <transition name=\"fade\" mode=\"out-in\">\n            <el-card v-loading=\"loading\" class=\"content-card\">\n              <component :is=\"currentComponent\"></component>\n            </el-card>\n          </transition>\n        </el-main>\n      </el-container>\n    </el-container>\n  </div>\n</template>\n\n\n<script setup>\n  import AddCustomer from \"@/views/AddCustomer\";\n  import ListCustomer from \"@/views/ListCustomer\";\n  import {onMounted, ref} from \"vue\";\n  import axios from 'axios';\n  import { ElMessage, ElLoading } from 'element-plus';\n\n  // 声明数组保存所有组件\n  const views = [AddCustomer, ListCustomer];\n  // 声明变量保存当前需要显示的组件名\n  const currentComponent = ref(views[0]);\n  // 声明菜单对象集合数据\n  const menus = ref([]);\n  // 加载状态\n  const loading = ref(false);\n\n  /* 菜单选中处理函数 */\n  const handlerSelect = async (id) => {\n    loading.value = true;\n    try {\n      const { data } = await axios.get(\"http://localhost:8081/compIndex?id=\" + id);\n      currentComponent.value = views[data];\n    } catch (error) {\n      ElMessage.error('加载组件失败: ' + error.message);\n      console.error('加载组件失败:', error);\n    } finally {\n      loading.value = false;\n    }\n  };\n\n  // 页面加载时获取菜单数据\n  onMounted(async () => {\n    const loadingInstance = ElLoading.service({\n      lock: true,\n      text: '加载菜单中...',\n      background: 'rgba(0, 0, 0, 0.7)'\n    });\n    \n    try {\n      const { data } = await axios.get(\"http://localhost:8081/listMenus\");\n      menus.value = data;\n    } catch (error) {\n      ElMessage.error('加载菜单失败: ' + error.message);\n      console.error('加载菜单失败:', error);\n    } finally {\n      loadingInstance.close();\n    }\n  });\n</script>\n\n<style scoped>\n  .top {\n    background-color: #0b2e52;\n    color: white;\n    height: 60px;\n    line-height: 60px;\n    font-size: 20px;\n    font-weight: bold;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.12);\n    text-align: center;\n  }\n  \n  .left {\n    background-color: #fff;\n    height: calc(100vh - 60px);\n    border-right: 1px solid #e6e6e6;\n    box-shadow: 2px 0 4px rgba(0, 0, 0, 0.05);\n  }\n  \n  .right {\n    background-color: #ffff;\n    padding: 20px;\n    min-height: calc(100vh - 60px);\n  }\n  \n  .content-card {\n    min-height: calc(100vh - 100px);\n    border-radius: 8px;\n    box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\n  }\n  \n  .el-menu {\n    border-right: none;\n  }\n  \n  .el-menu-item.is-active {\n    color: #1577d3;\n    background-color: #296bb6;\n  }\n\n  /* 组件切换动画 */\n  .fade-enter-active,\n  .fade-leave-active {\n    transition: all 0.3s cubic-bezier(0.55, 0, 0.1, 1);\n  }\n  \n  .fade-enter-from {\n    opacity: 0;\n    transform: translateX(30px);\n  }\n  \n  .fade-leave-to {\n    opacity: 0;\n    transform: translateX(-30px);\n  }\n\n/* 响应式设计 */\n@media (max-width: 768px) {\n  .el-aside {\n    width: 180px !important;\n  }\n  \n  .el-menu-vertical-demo:not(.el-menu--collapse) {\n    width: 180px;\n  }\n  \n  .top {\n    font-size: 16px;\n    padding: 0 10px;\n  }\n  \n  .right {\n    padding: 10px;\n  }\n}\n\n</style>"],"mappings":"AAsCE,OAAOA,WAAW,MAAM,qBAAqB;AAC7C,OAAOC,YAAY,MAAM,sBAAsB;AAC/C,SAAQC,SAAS,EAAEC,GAAG,QAAO,KAAK;AAClC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,SAAS,QAAQ,cAAc;;AAEnD;;;;;;;;IACA,MAAMC,KAAK,GAAG,CAACP,WAAW,EAAEC,YAAY,CAAC;IACzC;IACA,MAAMO,gBAAgB,GAAGL,GAAG,CAACI,KAAK,CAAC,CAAC,CAAC,CAAC;IACtC;IACA,MAAME,KAAK,GAAGN,GAAG,CAAC,EAAE,CAAC;IACrB;IACA,MAAMO,OAAO,GAAGP,GAAG,CAAC,KAAK,CAAC;;IAE1B;IACA,MAAMQ,aAAa,GAAG,MAAOC,EAAE,IAAK;MAClCF,OAAO,CAACG,KAAK,GAAG,IAAI;MACpB,IAAI;QACF,MAAM;UAAEC;QAAK,CAAC,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,qCAAqC,GAAGH,EAAE,CAAC;QAC5EJ,gBAAgB,CAACK,KAAK,GAAGN,KAAK,CAACO,IAAI,CAAC;MACtC,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdX,SAAS,CAACW,KAAK,CAAC,UAAU,GAAGA,KAAK,CAACC,OAAO,CAAC;QAC3CC,OAAO,CAACF,KAAK,CAAC,SAAS,EAAEA,KAAK,CAAC;MACjC,CAAC,SAAS;QACRN,OAAO,CAACG,KAAK,GAAG,KAAK;MACvB;IACF,CAAC;;IAED;IACAX,SAAS,CAAC,YAAY;MACpB,MAAMiB,eAAe,GAAGb,SAAS,CAACc,OAAO,CAAC;QACxCC,IAAI,EAAE,IAAI;QACVC,IAAI,EAAE,UAAU;QAChBC,UAAU,EAAE;MACd,CAAC,CAAC;MAEF,IAAI;QACF,MAAM;UAAET;QAAK,CAAC,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,iCAAiC,CAAC;QACnEN,KAAK,CAACI,KAAK,GAAGC,IAAI;MACpB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdX,SAAS,CAACW,KAAK,CAAC,UAAU,GAAGA,KAAK,CAACC,OAAO,CAAC;QAC3CC,OAAO,CAACF,KAAK,CAAC,SAAS,EAAEA,KAAK,CAAC;MACjC,CAAC,SAAS;QACRG,eAAe,CAACK,KAAK,CAAC,CAAC;MACzB;IACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}