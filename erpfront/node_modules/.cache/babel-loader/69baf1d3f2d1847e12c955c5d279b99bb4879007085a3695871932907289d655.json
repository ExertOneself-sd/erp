{"ast":null,"code":"import axios from 'axios';\nimport { ElMessage } from 'element-plus';\nimport { onMounted, reactive, ref } from 'vue';\nexport default {\n  __name: 'Category',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const config = {\n      id: 'id',\n      label: 'label',\n      children: 'children'\n    };\n    const treeRef = ref(null);\n    const categoryList = ref([]);\n    function queryCategoryTree() {\n      axios.get('http://localhost:8081/categoryList').then(response => {\n        categoryList.value = response.data;\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n    onMounted(function () {\n      queryCategoryTree();\n    });\n    const categoryForm = reactive({\n      id: 0,\n      isbn: '',\n      cateName: '',\n      remark: '',\n      pid: null // 新增pid字段\n    });\n    var pnode = null;\n    function handleNodeClick(node) {\n      pnode = node;\n      console.log('Selected node:', node); // 调试用\n    }\n    function saveCategoryForm() {\n      var url = \"http://localhost:8081/saveCategory\";\n      if (categoryForm.id == 0) {\n        if (!pnode) {\n          ElMessage.error(\"必选选中某个父节点!\");\n          return;\n        }\n        // 关键修改：只允许一级节点作为父节点\n        if (pnode.level !== 1) {\n          ElMessage.error(\"只能在一级分类下创建子分类!\");\n          return;\n        }\n        categoryForm.pid = pnode.data.id; // 使用data.id确保获取原始数据ID\n      } else {\n        url = \"http://localhost:8081/updateCategory\";\n      }\n      axios.post(url, categoryForm).then(response => {\n        if (response.data.code == 200) {\n          queryCategoryTree();\n          resetForm();\n        }\n        ElMessage(response.data.msg);\n      }).catch(error => {\n        console.log(error);\n        ElMessage.error(\"操作失败，请重试\");\n      });\n    }\n    function resetForm() {\n      categoryForm.id = 0;\n      categoryForm.isbn = '';\n      categoryForm.cateName = '';\n      categoryForm.remark = '';\n      categoryForm.pid = null;\n      pnode = null;\n    }\n    function cancelCategoryForm() {\n      resetForm();\n    }\n    function showCategory(node, data) {\n      axios.get(\"http://localhost:8081/loadCategory/\" + data.id).then(response => {\n        categoryForm.isbn = response.data.isbn;\n        categoryForm.cateName = response.data.cateName;\n        categoryForm.remark = response.data.remark;\n        categoryForm.id = data.id;\n        categoryForm.pid = data.pid; // 加载现有分类的父ID\n      }).catch(error => {\n        console.log(error);\n        ElMessage.error(\"加载数据失败\");\n      });\n    }\n    function delCategory(node, data) {\n      if (data.children && data.children.length > 0) {\n        ElMessage.error(\"请先删除所有子分类!\");\n        return;\n      }\n      if (!window.confirm(\"确定要删除此分类吗?\")) {\n        return;\n      }\n      axios.get(\"http://localhost:8081/delCategory/\" + data.id).then(response => {\n        ElMessage(response.data.msg);\n        if (response.data.code == 200) {\n          queryCategoryTree();\n          resetForm();\n        }\n      }).catch(error => {\n        console.log(error);\n        ElMessage.error(\"删除失败，请重试\");\n      });\n    }\n    const __returned__ = {\n      config,\n      treeRef,\n      categoryList,\n      queryCategoryTree,\n      categoryForm,\n      get pnode() {\n        return pnode;\n      },\n      set pnode(v) {\n        pnode = v;\n      },\n      handleNodeClick,\n      saveCategoryForm,\n      resetForm,\n      cancelCategoryForm,\n      showCategory,\n      delCategory,\n      get axios() {\n        return axios;\n      },\n      get ElMessage() {\n        return ElMessage;\n      },\n      onMounted,\n      reactive,\n      ref\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["axios","ElMessage","onMounted","reactive","ref","config","id","label","children","treeRef","categoryList","queryCategoryTree","get","then","response","value","data","catch","error","console","log","categoryForm","isbn","cateName","remark","pid","pnode","handleNodeClick","node","saveCategoryForm","url","level","post","code","resetForm","msg","cancelCategoryForm","showCategory","delCategory","length","window","confirm"],"sources":["D:/Program/Java QP/Erp/erpfront/src/views/Category.vue"],"sourcesContent":["<template>\r\n  <h2>商品类目</h2>\r\n    <el-tree\r\n      :props=\"config\"\r\n      :data=\"categoryList\"\r\n      default-expand-all\r\n      node-key=\"id\"\r\n      ref=\"treeRef\"\r\n      highlight-current=\"true\"\r\n      :expand-on-click-node=\"false\"\r\n      @node-click=\"handleNodeClick\">\r\n      <template #default=\"{ node, data }\">\r\n        <div class=\"custom-tree-node\">\r\n          <span>{{ node.label }}</span>\r\n          <div>\r\n            <el-button type=\"primary\" link @click.stop=\"showCategory(node,data)\">\r\n              修改\r\n            </el-button>\r\n            <el-button style=\"margin-left: 4px\" type=\"danger\" link @click.stop=\"delCategory(node, data)\">\r\n              删除\r\n            </el-button>\r\n          </div>\r\n          \r\n        </div>\r\n      </template>\r\n    </el-tree>\r\n\r\n      <hr/>\r\n    <el-form :model=\"categoryForm\" label-width=\"120px\">\r\n    <el-form-item label=\"分类编号\">\r\n      <el-input v-model=\"categoryForm.isbn\" style=\"width: 100%\" />\r\n    </el-form-item>\r\n    <el-form-item label=\"分类名称\">\r\n      <el-input v-model=\"categoryForm.cateName\" style=\"width: 100%\" /> \r\n    </el-form-item>\r\n    <el-form-item label=\"分类描述\">\r\n      <el-input v-model=\"categoryForm.remark\" style=\"width: 100%\" /> \r\n    </el-form-item>\r\n\r\n        <el-form-item>\r\n      <el-button type=\"primary\" @click=\"saveCategoryForm\">保存</el-button>\r\n      <el-button type=\"primary\" @click=\"cancelCategoryForm\">取消</el-button>\r\n    </el-form-item>\r\n  </el-form>\r\n</template>\r\n\r\n<script setup>\r\nimport axios from 'axios';\r\nimport { ElMessage } from 'element-plus';\r\nimport { onMounted, reactive, ref } from 'vue';\r\n\r\n\r\nconst config = {\r\n  id: 'id',\r\n  label: 'label',\r\n  children: 'children'\r\n}\r\n\r\nconst treeRef=ref(null)\r\nconst categoryList = ref([])\r\n\r\nfunction queryCategoryTree(){\r\n    axios.get('http://localhost:8081/categoryList')\r\n    .then((response)=>{\r\n        categoryList.value = response.data\r\n    })\r\n    .catch((error)=>{\r\n        console.log(error)\r\n    })\r\n}\r\n\r\nonMounted(function(){\r\n    queryCategoryTree()\r\n})\r\n\r\nconst categoryForm = reactive({\r\n    id:0,\r\n    isbn: '',\r\n    cateName:'',\r\n    remark:'',\r\n    pid: null // 新增pid字段\r\n})\r\n\r\nvar pnode=null\r\nfunction handleNodeClick(node) {\r\n    pnode=node\r\n    console.log('Selected node:', node) // 调试用\r\n}\r\n\r\nfunction saveCategoryForm(){\r\n    var url=\"http://localhost:8081/saveCategory\"\r\n\r\n    if(categoryForm.id==0){\r\n        if(!pnode){\r\n            ElMessage.error(\"必选选中某个父节点!\")\r\n            return\r\n        }\r\n        // 关键修改：只允许一级节点作为父节点\r\n        if(pnode.level !== 1){\r\n            ElMessage.error(\"只能在一级分类下创建子分类!\")\r\n            return\r\n        }\r\n        categoryForm.pid=pnode.data.id // 使用data.id确保获取原始数据ID\r\n    }else{\r\n        url=\"http://localhost:8081/updateCategory\"\r\n    }\r\n    \r\n    axios.post(url,categoryForm)\r\n    .then((response)=>{\r\n        if(response.data.code==200){\r\n            queryCategoryTree()\r\n            resetForm()\r\n        }\r\n        ElMessage(response.data.msg)\r\n    })\r\n    .catch((error)=>{\r\n        console.log(error)\r\n        ElMessage.error(\"操作失败，请重试\")\r\n    })\r\n}\r\n\r\nfunction resetForm(){\r\n    categoryForm.id=0\r\n    categoryForm.isbn=''\r\n    categoryForm.cateName=''\r\n    categoryForm.remark=''\r\n    categoryForm.pid=null\r\n    pnode=null\r\n}\r\n\r\nfunction cancelCategoryForm(){\r\n    resetForm()\r\n}\r\n\r\nfunction showCategory(node,data){\r\n    axios.get(\"http://localhost:8081/loadCategory/\"+data.id)\r\n    .then((response)=>{\r\n        categoryForm.isbn=response.data.isbn\r\n        categoryForm.cateName=response.data.cateName\r\n        categoryForm.remark=response.data.remark\r\n        categoryForm.id=data.id\r\n        categoryForm.pid=data.pid // 加载现有分类的父ID\r\n    })\r\n    .catch((error)=>{\r\n        console.log(error)\r\n        ElMessage.error(\"加载数据失败\")\r\n    })\r\n}\r\n\r\nfunction delCategory(node,data){\r\n    if(data.children && data.children.length>0){\r\n        ElMessage.error(\"请先删除所有子分类!\")\r\n        return\r\n    }\r\n    \r\n    if(!window.confirm(\"确定要删除此分类吗?\")){\r\n        return\r\n    }\r\n    \r\n    axios.get(\"http://localhost:8081/delCategory/\"+data.id)\r\n    .then((response)=>{\r\n        ElMessage(response.data.msg)\r\n        if(response.data.code==200){\r\n            queryCategoryTree()\r\n            resetForm()\r\n        }\r\n    })\r\n    .catch((error)=>{\r\n        console.log(error)\r\n        ElMessage.error(\"删除失败，请重试\")\r\n    })\r\n}\r\n\r\n</script>\r\n\r\n<style>\r\n/* 可选样式优化 */\r\n.custom-tree-node {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 100%;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}