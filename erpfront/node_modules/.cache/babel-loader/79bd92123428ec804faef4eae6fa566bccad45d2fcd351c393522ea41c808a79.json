{"ast":null,"code":"import AddCustomer from \"@/views/AddCustomer\";\nimport ListCustomer from \"@/views/ListCustomer\";\nimport { onMounted, ref } from \"vue\";\nimport axios from 'axios';\n\n//声明数组保存所有组件\n\nexport default {\n  __name: 'index',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const views = [AddCustomer, ListCustomer];\n    //声明变量保存当前需要显示的组件名\n    const currentComponent = ref(views[0]);\n    //声明菜单对象集合数据\n    const menus = ref([]);\n    /*menu组件选中叶子节点触发的函数，参数index：菜单节点的index值，对应数据库菜单节点的id*/\n    const handlerSelect = function (id) {\n      console.log(id);\n      //发生ajax请求，加载组件下标\n      axios.get(\"http://localhost:8081/compIndex?id=\" + id).then(response => {\n        //动态该currentComponent赋值,从组件集合views中获取的组件名字\n        currentComponent.value = views[response.data];\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n    //页面加载，发生ajax请求加载左侧菜单信息\n    onMounted(function () {\n      axios.get(\"http://localhost:8081/listMenus\").then(response => {\n        console.log(response);\n        //将响应的数据绑定到menus，实现数据渲染\n        menus.value = response.data;\n      }).catch(error => {\n        console.log(error);\n      });\n    });\n    const __returned__ = {\n      views,\n      currentComponent,\n      menus,\n      handlerSelect,\n      get AddCustomer() {\n        return AddCustomer;\n      },\n      get ListCustomer() {\n        return ListCustomer;\n      },\n      onMounted,\n      ref,\n      get axios() {\n        return axios;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["AddCustomer","ListCustomer","onMounted","ref","axios","views","currentComponent","menus","handlerSelect","id","console","log","get","then","response","value","data","catch","error"],"sources":["D:/Program/Web QP/vue/erpfront/src/views/index.vue"],"sourcesContent":["<template>\n  <!-- 后台主页布局 -->\n  <div class=\"common-layout\">\n    <el-container>\n      <el-header class=\"top\">ERP系统</el-header>\n      <el-container   >\n        <el-aside width=\"240px\" class=\"left\">\n          系统菜单\n\n          <!--添加Menu菜单组件-->\n          <el-menu\n              class=\"el-menu-vertical-demo\" @select=\"handlerSelect\" >\n            <el-sub-menu v-for=\"menu in menus\" :index=\"String(menu.id)\">\n              <template #title>\n                <span>{{ menu.label }}</span>\n              </template>\n              <el-menu-item v-for=\"subMenu in menu.subMenus\"  :index=\"String(subMenu.id)\">\n                {{subMenu.label}}\n              </el-menu-item>\n\n            </el-sub-menu>\n\n          </el-menu>\n        </el-aside>\n        <el-main class=\"right\">\n            <!--通过点击左边菜单，动态显示不同组件 -->\n<!--           <component :is=\"currentComponent\"></component>-->\n          <transition name=\"fade\" mode=\"out-in\">\n            <component :is=\"currentComponent\"></component>\n          </transition>\n        </el-main>\n      </el-container>\n    </el-container>\n  </div>\n</template>\n\n\n<script setup>\n  import AddCustomer from \"@/views/AddCustomer\";\n  import ListCustomer from \"@/views/ListCustomer\";\n  import {onMounted, ref} from \"vue\";\n  import axios from 'axios';\n\n  //声明数组保存所有组件\n  const views=[AddCustomer,ListCustomer]\n  //声明变量保存当前需要显示的组件名\n  const currentComponent=ref(views[0]);\n  //声明菜单对象集合数据\n  const menus=ref([]);\n  /*menu组件选中叶子节点触发的函数，参数index：菜单节点的index值，对应数据库菜单节点的id*/\n  const  handlerSelect=function(id){\n    console.log(id);\n    //发生ajax请求，加载组件下标\n    axios.get(\"http://localhost:8081/compIndex?id=\"+id)\n    .then((response)=>{\n      //动态该currentComponent赋值,从组件集合views中获取的组件名字\n      currentComponent.value=views[response.data];\n    })\n    .catch((error)=>{\n          console.log(error);\n    });\n\n  }\n  //页面加载，发生ajax请求加载左侧菜单信息\n  onMounted(function(){\n    axios.get(\"http://localhost:8081/listMenus\")\n    .then((response)=>{\n      console.log(response);\n      //将响应的数据绑定到menus，实现数据渲染\n      menus.value=response.data;\n    })\n    .catch((error)=>{\n      console.log(error);\n    });\n  });\n</script>\n\n<style scoped>\n:root {\n  /* 主色调 - 专业蓝色 */\n  --primary-color: #165DFF;\n  --primary-light: #4080FF;\n  --primary-dark: #0E42D2;\n  \n  /* 中性色系 */\n  --sidebar-bg: #1D2129;\n  --sidebar-text: #C9CDD4;\n  --content-bg: #F2F3F5;\n  --content-text: #4E5969;\n  --border-color: #E5E6EB;\n  --card-bg: #FFFFFF;\n  \n  /* 状态色 */\n  --success-color: #00B42A;\n  --warning-color: #FF7D00;\n  --error-color: #F53F3F;\n  --info-color: #86909C;\n  \n  /* 交互状态 */\n  --active-color: var(--primary-light);\n  --hover-color: rgba(22, 93, 255, 0.1);\n  --selected-color: rgba(22, 93, 255, 0.2);\n}\n\n/* 通用样式 */\n.common-layout {\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n}\n\n/* 顶部导航栏 */\n.top {\n  background: var(--primary-color);\n  color: white;\n  padding: 0 24px;\n  display: flex;\n  align-items: center;\n  font-size: 20px;\n  font-weight: 500;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.08);\n  position: relative;\n  z-index: 10;\n}\n\n/* 侧边栏 */\n.left {\n  background: var(--sidebar-bg);\n  height: calc(100vh - 64px);\n  color: var(--sidebar-text);\n  transition: width 0.3s ease;\n  overflow: hidden;\n}\n\n/* 主内容区 */\n.right {\n  background: var(--content-bg);\n  padding: 24px;\n  min-height: calc(100vh - 64px);\n  overflow-y: auto;\n}\n\n/* 菜单样式优化 */\n.el-menu {\n  border-right: none;\n  background: transparent;\n  height: 100%;\n}\n\n.el-menu-item, .el-sub-menu__title {\n  color: var(--sidebar-text);\n  transition: all 0.2s ease;\n}\n\n.el-menu-item:hover, .el-sub-menu__title:hover {\n  background: var(--hover-color)!important;\n  color: white;\n}\n\n.el-menu-item.is-active {\n  background: var(--selected-color)!important;\n  color: white;\n  border-right: 3px solid var(--primary-light);\n}\n\n/* 组件切换动画 */\n.fade-enter-active,\n.fade-leave-active {\n  transition: opacity 0.3s ease;\n}\n\n.fade-enter-from,\n.fade-leave-to {\n  opacity: 0;\n}\n\n/* 响应式设计 */\n@media (max-width: 768px) {\n  .el-aside {\n    width: 64px !important;\n  }\n  \n  .el-menu-vertical-demo:not(.el-menu--collapse) {\n    width: 64px;\n  }\n  \n  .top {\n    font-size: 16px;\n    padding: 0 16px;\n  }\n  \n  .right {\n    padding: 16px;\n  }\n  \n  .el-sub-menu__title span {\n    display: none;\n  }\n  \n  .el-menu-item span {\n    display: none;\n  }\n}\n\n</style>"],"mappings":"AAsCE,OAAOA,WAAW,MAAM,qBAAqB;AAC7C,OAAOC,YAAY,MAAM,sBAAsB;AAC/C,SAAQC,SAAS,EAAEC,GAAG,QAAO,KAAK;AAClC,OAAOC,KAAK,MAAM,OAAO;;AAEzB;;;;;;;;IACA,MAAMC,KAAK,GAAC,CAACL,WAAW,EAACC,YAAY;IACrC;IACA,MAAMK,gBAAgB,GAACH,GAAG,CAACE,KAAK,CAAC,CAAC,CAAC,CAAC;IACpC;IACA,MAAME,KAAK,GAACJ,GAAG,CAAC,EAAE,CAAC;IACnB;IACA,MAAOK,aAAa,GAAC,SAAAA,CAASC,EAAE,EAAC;MAC/BC,OAAO,CAACC,GAAG,CAACF,EAAE,CAAC;MACf;MACAL,KAAK,CAACQ,GAAG,CAAC,qCAAqC,GAACH,EAAE,EACjDI,IAAI,CAAEC,QAAQ,IAAG;QAChB;QACAR,gBAAgB,CAACS,KAAK,GAACV,KAAK,CAACS,QAAQ,CAACE,IAAI,CAAC;MAC7C,CAAC,EACAC,KAAK,CAAEC,KAAK,IAAG;QACVR,OAAO,CAACC,GAAG,CAACO,KAAK,CAAC;MACxB,CAAC,CAAC;IAEJ;IACA;IACAhB,SAAS,CAAC,YAAU;MAClBE,KAAK,CAACQ,GAAG,CAAC,iCAAiC,EAC1CC,IAAI,CAAEC,QAAQ,IAAG;QAChBJ,OAAO,CAACC,GAAG,CAACG,QAAQ,CAAC;QACrB;QACAP,KAAK,CAACQ,KAAK,GAACD,QAAQ,CAACE,IAAI;MAC3B,CAAC,EACAC,KAAK,CAAEC,KAAK,IAAG;QACdR,OAAO,CAACC,GAAG,CAACO,KAAK,CAAC;MACpB,CAAC,CAAC;IACJ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}