{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { reactive, ref, onMounted } from \"vue\";\nimport { useRouter } from \"vue-router\";\nimport { ElMessage } from \"element-plus\";\nimport { getCurrentInstance } from \"vue\";\nexport default {\n  __name: 'login',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const axios = getCurrentInstance().proxy.axios;\n    const router = useRouter();\n    const loginForm = ref();\n    const isLoading = ref(false); // 登录加载状态\n    const isFocused = ref({\n      uname: false,\n      upwd: false\n    }); // 输入框焦点状态\n\n    const loginUser = reactive({\n      uname: \"admin\",\n      // 默认值便于测试\n      upwd: \"123456\"\n    });\n\n    // 登录功能优化，添加加载状态和错误处理\n    function userLogin() {\n      if (!loginUser.uname || !loginUser.upwd) {\n        ElMessage({\n          message: \"账号和密码不能为空\",\n          type: \"warning\"\n        });\n        return;\n      }\n      isLoading.value = true;\n      axios.post(\"http://localhost:8081/userLogin\", loginUser).then(response => {\n        isLoading.value = false;\n        if (response.data.code == 200) {\n          // 登录成功，添加过渡效果\n          ElMessage({\n            message: \"登录成功\",\n            type: \"success\",\n            onClose: () => {\n              router.push({\n                name: \"index\"\n              });\n            }\n          });\n        } else {\n          ElMessage(response.data.msg);\n        }\n      }).catch(error => {\n        isLoading.value = false;\n        console.log(error);\n        ElMessage({\n          message: \"登录失败，请稍后再试\",\n          type: \"error\"\n        });\n      });\n    }\n\n    // 页面加载时添加动画效果\n    onMounted(() => {\n      const card = document.querySelector('.login-card');\n      if (card) {\n        card.style.opacity = '0';\n        card.style.transform = 'translateY(20px)';\n        card.style.transition = 'all 0.5s ease';\n        setTimeout(() => {\n          card.style.opacity = '1';\n          card.style.transform = 'translateY(0)';\n        }, 300);\n      }\n    });\n    const __returned__ = {\n      axios,\n      router,\n      loginForm,\n      isLoading,\n      isFocused,\n      loginUser,\n      userLogin,\n      reactive,\n      ref,\n      onMounted,\n      get useRouter() {\n        return useRouter;\n      },\n      get ElMessage() {\n        return ElMessage;\n      },\n      getCurrentInstance\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["reactive","ref","onMounted","useRouter","ElMessage","getCurrentInstance","axios","proxy","router","loginForm","isLoading","isFocused","uname","upwd","loginUser","userLogin","message","type","value","post","then","response","data","code","onClose","push","name","msg","catch","error","console","log","card","document","querySelector","style","opacity","transform","transition","setTimeout"],"sources":["D:/Program/Java QP/Erp/erpfront/src/views/login.vue"],"sourcesContent":["<template>\r\n  <div class=\"login-container\">\r\n    <!-- 背景装饰元素 -->\r\n    <div class=\"bg-pattern\"></div>\r\n    \r\n    <el-card class=\"login-card\" shadow=\"hover\">\r\n      <!-- 标题区域，添加图标增强识别度 -->\r\n      <div class=\"login-header\">\r\n        <i class=\"el-icon-s-home\" style=\"font-size: 60px; margin-right: 15px;\"></i>\r\n        <span class=\"title-text\">ERP系统</span>\r\n      </div>\r\n      \r\n      <el-form\r\n        ref=\"loginForm\"\r\n        :model=\"loginUser\"\r\n        size=\"large\"\r\n        label-position=\"right\"\r\n        label-width=\"80px\"\r\n        class=\"login-form\"\r\n      >\r\n        <!-- 账号输入框，添加图标和焦点效果 -->\r\n        <el-form-item label=\"账号\">\r\n          <el-input \r\n            v-model=\"loginUser.uname\"\r\n            prefix-icon=\"el-icon-user\"\r\n            placeholder=\"请输入账号\"\r\n            :class=\"{ 'focused': isFocused.uname }\"\r\n            @focus=\"isFocused.uname = true\"\r\n            @blur=\"isFocused.uname = false\"\r\n          >\r\n          </el-input>\r\n        </el-form-item>\r\n        \r\n        <!-- 密码输入框，添加图标和焦点效果 -->\r\n        <el-form-item label=\"密码\">\r\n          <el-input \r\n            type=\"password\" \r\n            v-model=\"loginUser.upwd\" \r\n            show-password\r\n            prefix-icon=\"el-icon-lock\"\r\n            placeholder=\"请输入密码\"\r\n            :class=\"{ 'focused': isFocused.upwd }\"\r\n            @focus=\"isFocused.upwd = true\"\r\n            @blur=\"isFocused.upwd = false\"\r\n          >\r\n          </el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      \r\n      <!-- 登录按钮区域，添加加载状态和动画效果 -->\r\n      <div class=\"login-footer\">\r\n        <el-button\r\n          @click=\"userLogin\"\r\n          type=\"primary\"\r\n          size=\"large\"\r\n          :loading=\"isLoading\"\r\n          class=\"login-button\"\r\n          :style=\"{ width: isLoading ? '100px' : '300px' }\"\r\n        >\r\n          {{ isLoading ? '登录中...' : '登 录' }}\r\n        </el-button>\r\n      </div>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { reactive, ref, onMounted } from \"vue\";\r\nimport { useRouter } from \"vue-router\";\r\nimport { ElMessage } from \"element-plus\";\r\nimport { getCurrentInstance } from \"vue\";\r\nconst axios = getCurrentInstance().proxy.axios;\r\n\r\nconst router = useRouter();\r\nconst loginForm = ref();\r\nconst isLoading = ref(false); // 登录加载状态\r\nconst isFocused = ref({ uname: false, upwd: false }); // 输入框焦点状态\r\n\r\nconst loginUser = reactive({\r\n  uname: \"admin\", // 默认值便于测试\r\n  upwd: \"123456\"\r\n});\r\n\r\n// 登录功能优化，添加加载状态和错误处理\r\nfunction userLogin() {\r\n  if (!loginUser.uname || !loginUser.upwd) {\r\n    ElMessage({\r\n      message: \"账号和密码不能为空\",\r\n      type: \"warning\"\r\n    });\r\n    return;\r\n  }\r\n  \r\n  isLoading.value = true;\r\n  axios.post(\"http://localhost:8081/userLogin\", loginUser)\r\n    .then((response) => {\r\n      isLoading.value = false;\r\n      if (response.data.code == 200) {\r\n        // 登录成功，添加过渡效果\r\n        ElMessage({\r\n          message: \"登录成功\",\r\n          type: \"success\",\r\n          onClose: () => {\r\n            router.push({ name: \"index\" });\r\n          }\r\n        });\r\n      } else {\r\n        ElMessage(response.data.msg);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      isLoading.value = false;\r\n      console.log(error);\r\n      ElMessage({\r\n        message: \"登录失败，请稍后再试\",\r\n        type: \"error\"\r\n      });\r\n    });\r\n}\r\n\r\n// 页面加载时添加动画效果\r\nonMounted(() => {\r\n  const card = document.querySelector('.login-card');\r\n  if (card) {\r\n    card.style.opacity = '0';\r\n    card.style.transform = 'translateY(20px)';\r\n    card.style.transition = 'all 0.5s ease';\r\n    \r\n    setTimeout(() => {\r\n      card.style.opacity = '1';\r\n      card.style.transform = 'translateY(0)';\r\n    }, 300);\r\n  }\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n/* 全局背景样式，添加渐变和装饰图案 */\r\n.login-container {\r\n  position: relative;\r\n  min-height: 100vh;\r\n  background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 20px;\r\n}\r\n\r\n.bg-pattern {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-image: \r\n    radial-gradient(circle at 20% 30%, rgba(64, 158, 255, 0.1) 0%, transparent 20%),\r\n    radial-gradient(circle at 80% 70%, rgba(64, 158, 255, 0.1) 0%, transparent 20%);\r\n  z-index: 1;\r\n}\r\n\r\n/* 登录卡片优化，添加阴影和圆角 */\r\n.login-card {\r\n  position: relative;\r\n  z-index: 2;\r\n  border-radius: 12px;\r\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.login-card:hover {\r\n  box-shadow: 0 15px 35px rgba(0, 0, 0, 0.15);\r\n}\r\n\r\n/* 标题区域样式 */\r\n.login-header {\r\n  padding: 40px 0 50px 0;\r\n  text-align: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n\r\n.title-text {\r\n  color: #409eff;\r\n  font-size: 42px;\r\n  font-weight: bold;\r\n  letter-spacing: 2px;\r\n  margin-top: 10px;\r\n  text-shadow: 0 2px 4px rgba(64, 158, 255, 0.1);\r\n}\r\n\r\n/* 表单样式优化，增加间距和焦点效果 */\r\n.login-form {\r\n  width: 100%;\r\n  max-width: 400px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.el-form-item {\r\n  margin-bottom: 25px;\r\n}\r\n\r\n.el-input {\r\n  border-radius: 8px;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.el-input.focused {\r\n  box-shadow: 0 0 0 3px rgba(64, 158, 255, 0.2);\r\n  border-color: #409eff;\r\n}\r\n\r\n.el-input__prefix {\r\n  color: #909399;\r\n}\r\n\r\n/* 按钮样式优化，添加动画和状态效果 */\r\n.login-footer {\r\n  padding: 20px 0 40px;\r\n  text-align: center;\r\n}\r\n\r\n.login-button {\r\n  border-radius: 8px;\r\n  font-size: 18px;\r\n  font-weight: 500;\r\n  transition: all 0.3s ease;\r\n  box-shadow: 0 4px 12px rgba(64, 158, 255, 0.3);\r\n}\r\n\r\n.login-button:hover {\r\n  background-color: #3a8ee6;\r\n  transform: translateY(-2px);\r\n  box-shadow: 0 6px 16px rgba(64, 158, 255, 0.4);\r\n}\r\n\r\n.login-button:active {\r\n  transform: translateY(1px);\r\n  box-shadow: 0 2px 8px rgba(64, 158, 255, 0.3);\r\n}\r\n\r\n/* 响应式设计，小屏幕下调整布局 */\r\n@media (max-width: 450px) {\r\n  .title-text {\r\n    font-size: 36px;\r\n  }\r\n  \r\n  .login-form {\r\n    max-width: 320px;\r\n  }\r\n  \r\n  .login-button {\r\n    width: 100% !important;\r\n  }\r\n}\r\n</style>"],"mappings":";AAmEA,SAASA,QAAQ,EAAEC,GAAG,EAAEC,SAAS,QAAQ,KAAK;AAC9C,SAASC,SAAS,QAAQ,YAAY;AACtC,SAASC,SAAS,QAAQ,cAAc;AACxC,SAASC,kBAAkB,QAAQ,KAAK;;;;;;;IACxC,MAAMC,KAAK,GAAGD,kBAAkB,CAAC,CAAC,CAACE,KAAK,CAACD,KAAK;IAE9C,MAAME,MAAM,GAAGL,SAAS,CAAC,CAAC;IAC1B,MAAMM,SAAS,GAAGR,GAAG,CAAC,CAAC;IACvB,MAAMS,SAAS,GAAGT,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;IAC9B,MAAMU,SAAS,GAAGV,GAAG,CAAC;MAAEW,KAAK,EAAE,KAAK;MAAEC,IAAI,EAAE;IAAM,CAAC,CAAC,CAAC,CAAC;;IAEtD,MAAMC,SAAS,GAAGd,QAAQ,CAAC;MACzBY,KAAK,EAAE,OAAO;MAAE;MAChBC,IAAI,EAAE;IACR,CAAC,CAAC;;IAEF;IACA,SAASE,SAASA,CAAA,EAAG;MACnB,IAAI,CAACD,SAAS,CAACF,KAAK,IAAI,CAACE,SAAS,CAACD,IAAI,EAAE;QACvCT,SAAS,CAAC;UACRY,OAAO,EAAE,WAAW;UACpBC,IAAI,EAAE;QACR,CAAC,CAAC;QACF;MACF;MAEAP,SAAS,CAACQ,KAAK,GAAG,IAAI;MACtBZ,KAAK,CAACa,IAAI,CAAC,iCAAiC,EAAEL,SAAS,CAAC,CACrDM,IAAI,CAAEC,QAAQ,IAAK;QAClBX,SAAS,CAACQ,KAAK,GAAG,KAAK;QACvB,IAAIG,QAAQ,CAACC,IAAI,CAACC,IAAI,IAAI,GAAG,EAAE;UAC7B;UACAnB,SAAS,CAAC;YACRY,OAAO,EAAE,MAAM;YACfC,IAAI,EAAE,SAAS;YACfO,OAAO,EAAEA,CAAA,KAAM;cACbhB,MAAM,CAACiB,IAAI,CAAC;gBAAEC,IAAI,EAAE;cAAQ,CAAC,CAAC;YAChC;UACF,CAAC,CAAC;QACJ,CAAC,MAAM;UACLtB,SAAS,CAACiB,QAAQ,CAACC,IAAI,CAACK,GAAG,CAAC;QAC9B;MACF,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;QAChBnB,SAAS,CAACQ,KAAK,GAAG,KAAK;QACvBY,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;QAClBzB,SAAS,CAAC;UACRY,OAAO,EAAE,YAAY;UACrBC,IAAI,EAAE;QACR,CAAC,CAAC;MACJ,CAAC,CAAC;IACN;;IAEA;IACAf,SAAS,CAAC,MAAM;MACd,MAAM8B,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,aAAa,CAAC;MAClD,IAAIF,IAAI,EAAE;QACRA,IAAI,CAACG,KAAK,CAACC,OAAO,GAAG,GAAG;QACxBJ,IAAI,CAACG,KAAK,CAACE,SAAS,GAAG,kBAAkB;QACzCL,IAAI,CAACG,KAAK,CAACG,UAAU,GAAG,eAAe;QAEvCC,UAAU,CAAC,MAAM;UACfP,IAAI,CAACG,KAAK,CAACC,OAAO,GAAG,GAAG;UACxBJ,IAAI,CAACG,KAAK,CAACE,SAAS,GAAG,eAAe;QACxC,CAAC,EAAE,GAAG,CAAC;MACT;IACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}