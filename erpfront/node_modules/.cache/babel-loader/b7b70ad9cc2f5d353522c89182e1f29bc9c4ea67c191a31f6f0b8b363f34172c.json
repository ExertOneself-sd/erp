{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_tree = _resolveComponent(\"el-tree\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_cache[0] || (_cache[0] = _createElementVNode(\"h2\", null, \"商品类目\", -1 /* HOISTED */)), _createVNode(_component_el_tree, {\n    props: $setup.config,\n    data: $setup.categoryList,\n    \"default-expand-all\": \"\",\n    \"node-key\": \"id\",\n    ref: \"treeRef\"\n  }, null, 8 /* PROPS */, [\"data\"])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementBlock","_Fragment","_createElementVNode","_createVNode","_component_el_tree","props","$setup","config","data","categoryList","ref"],"sources":["D:\\Program\\Java QP\\Erp\\erpfront\\src\\views\\Category.vue"],"sourcesContent":["<template>\r\n  <h2>商品类目</h2>\r\n    <el-tree\r\n      :props=\"config\"\r\n      :data=\"categoryList\"\r\n      default-expand-all\r\n      node-key=\"id\"\r\n      ref=\"treeRef\"/>\r\n</template>\r\n\r\n<script setup>\r\nimport {onMounted, reactive, ref} from \"vue\";\r\nimport axios from \"axios\";\r\n  //声明tree的配置\r\n  const config={\r\n    id:'id',\r\n    label:'label',\r\n    children:'children'\r\n  };\r\n  //声明tree的引用\r\n  const treeRef=ref(null);\r\n  //声明树节点数据\r\n  const categoryList=ref([]);\r\n  //加载发送请求，加载tree\r\n  onMounted(function(){\r\n    axios.get(\"http://localhost:8081/categoryList\")\r\n    .then((response)=>{\r\n      categoryList.value=response.data;\r\n    })\r\n    .catch((error)=>{\r\n      console.log(error);\r\n    })\r\n  })\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"],"mappings":";;;uBAAAA,mBAAA,CAAAC,SAAA,S,0BACEC,mBAAA,CAAa,YAAT,MAAI,sBACNC,YAAA,CAKiBC,kBAAA;IAJdC,KAAK,EAAEC,MAAA,CAAAC,MAAM;IACbC,IAAI,EAAEF,MAAA,CAAAG,YAAY;IACnB,oBAAkB,EAAlB,EAAkB;IAClB,UAAQ,EAAC,IAAI;IACbC,GAAG,EAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}