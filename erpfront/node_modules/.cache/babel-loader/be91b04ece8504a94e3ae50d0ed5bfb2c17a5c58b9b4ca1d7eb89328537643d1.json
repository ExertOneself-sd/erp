{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"mb-6\"\n};\nconst _hoisted_3 = {\n  class: \"flex justify-between items-center\"\n};\nconst _hoisted_4 = {\n  class: \"flex space-x-2\"\n};\nconst _hoisted_5 = {\n  class: \"mb-6\"\n};\nexport function render(_ctx, _cache) {\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_tree = _resolveComponent(\"el-tree\");\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_input_number = _resolveComponent(\"el-input-number\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[9] || (_cache[9] = _createElementVNode(\"h2\", {\n    class: \"text-xl font-bold mb-4\"\n  }, \"添加菜单\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_2, [_cache[6] || (_cache[6] = _createElementVNode(\"p\", {\n    class: \"text-gray-600 mb-2\"\n  }, \"选择新增节点的父节点：\", -1 /* HOISTED */)), _createVNode(_component_el_tree, {\n    props: _ctx.props,\n    data: _ctx.treeNodeList,\n    \"node-key\": \"id\",\n    ref: \"treeRef\",\n    onNodeClick: _ctx.handleNodeClick,\n    \"highlight-current\": \"\",\n    \"default-expanded-keys\": _ctx.expandedKeys\n  }, {\n    default: _withCtx(({\n      node,\n      data\n    }) => [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"span\", {\n      class: _normalizeClass({\n        'text-primary': _ctx.currentNodeId === data.id\n      })\n    }, _toDisplayString(node.label), 3 /* TEXT, CLASS */), _createElementVNode(\"div\", _hoisted_4, [_createVNode(_component_el_button, {\n      type: \"primary\",\n      size: \"small\",\n      onClick: $event => _ctx.append(data)\n    }, {\n      default: _withCtx(() => _cache[4] || (_cache[4] = [_createElementVNode(\"i\", {\n        class: \"el-icon-plus\"\n      }, null, -1 /* HOISTED */), _createTextVNode(\" 添加子菜单 \")])),\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"]), _createVNode(_component_el_button, {\n      type: \"danger\",\n      size: \"small\",\n      onClick: $event => _ctx.remove(node, data)\n    }, {\n      default: _withCtx(() => _cache[5] || (_cache[5] = [_createElementVNode(\"i\", {\n        class: \"el-icon-delete\"\n      }, null, -1 /* HOISTED */), _createTextVNode(\" 删除 \")])),\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])])])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"props\", \"data\", \"onNodeClick\", \"default-expanded-keys\"])]), _cache[10] || (_cache[10] = _createElementVNode(\"hr\", {\n    class: \"my-6 border-gray-200\"\n  }, null, -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_5, [_createVNode(_component_el_form, {\n    model: _ctx.menuForm,\n    rules: _ctx.rules,\n    \"label-width\": \"100px\",\n    ref: \"formRef\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_form_item, {\n      label: \"菜单名称\",\n      prop: \"label\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        modelValue: _ctx.menuForm.label,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.menuForm.label = $event),\n        placeholder: \"请输入菜单名称\"\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, {\n      label: \"菜单路径\",\n      prop: \"path\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        modelValue: _ctx.menuForm.path,\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.menuForm.path = $event),\n        placeholder: \"请输入菜单路径\"\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, {\n      label: \"菜单图标\",\n      prop: \"icon\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        modelValue: _ctx.menuForm.icon,\n        \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => _ctx.menuForm.icon = $event),\n        placeholder: \"请输入菜单图标\"\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, {\n      label: \"排序号\",\n      prop: \"sort\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_input_number, {\n        modelValue: _ctx.menuForm.sort,\n        \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => _ctx.menuForm.sort = $event),\n        min: 0,\n        placeholder: \"请输入排序号\"\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, null, {\n      default: _withCtx(() => [_createVNode(_component_el_button, {\n        type: \"primary\",\n        onClick: _ctx.submitMenuForm\n      }, {\n        default: _withCtx(() => _cache[7] || (_cache[7] = [_createTextVNode(\"提交\")])),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_el_button, {\n        onClick: _ctx.resetForm\n      }, {\n        default: _withCtx(() => _cache[8] || (_cache[8] = [_createTextVNode(\"重置\")])),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\"])]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"model\", \"rules\"])])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createVNode","_component_el_tree","props","_ctx","data","treeNodeList","ref","onNodeClick","handleNodeClick","expandedKeys","default","_withCtx","node","_hoisted_3","_normalizeClass","currentNodeId","id","label","_hoisted_4","_component_el_button","type","size","onClick","$event","append","_cache","_createTextVNode","_","remove","_hoisted_5","_component_el_form","model","menuForm","rules","_component_el_form_item","prop","_component_el_input","modelValue","placeholder","path","icon","_component_el_input_number","sort","min","submitMenuForm","resetForm"],"sources":["D:\\Program\\Java QP\\Erp\\erpfront\\src\\views\\AddMenus.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <h2 class=\"text-xl font-bold mb-4\">添加菜单</h2>\r\n    \r\n    <div class=\"mb-6\">\r\n      <p class=\"text-gray-600 mb-2\">选择新增节点的父节点：</p>\r\n      <el-tree\r\n        :props=\"props\"\r\n        :data=\"treeNodeList\"\r\n        node-key=\"id\"\r\n        ref=\"treeRef\"\r\n        @node-click=\"handleNodeClick\"\r\n        highlight-current\r\n        :default-expanded-keys=\"expandedKeys\"\r\n      >\r\n        <!-- 自定义树节点内容 -->\r\n        <template #default=\"{ node, data }\">\r\n          <div class=\"flex justify-between items-center\">\r\n            <span :class=\"{'text-primary': currentNodeId === data.id}\">{{ node.label }}</span>\r\n            <div class=\"flex space-x-2\">\r\n              <el-button type=\"primary\" size=\"small\" @click=\"append(data)\">\r\n                <i class=\"el-icon-plus\"></i> 添加子菜单\r\n              </el-button>\r\n              <el-button type=\"danger\" size=\"small\" @click=\"remove(node, data)\">\r\n                <i class=\"el-icon-delete\"></i> 删除\r\n              </el-button>\r\n            </div>\r\n          </div>\r\n        </template>\r\n      </el-tree>\r\n    </div>\r\n    \r\n    <hr class=\"my-6 border-gray-200\">\r\n    \r\n    <div class=\"mb-6\">\r\n      <el-form :model=\"menuForm\" :rules=\"rules\" label-width=\"100px\" ref=\"formRef\">\r\n        <el-form-item label=\"菜单名称\" prop=\"label\">\r\n          <el-input v-model=\"menuForm.label\" placeholder=\"请输入菜单名称\"></el-input>\r\n        </el-form-item>\r\n        \r\n        <el-form-item label=\"菜单路径\" prop=\"path\">\r\n          <el-input v-model=\"menuForm.path\" placeholder=\"请输入菜单路径\"></el-input>\r\n        </el-form-item>\r\n        \r\n        <el-form-item label=\"菜单图标\" prop=\"icon\">\r\n          <el-input v-model=\"menuForm.icon\" placeholder=\"请输入菜单图标\"></el-input>\r\n        </el-form-item>\r\n        \r\n        <el-form-item label=\"排序号\" prop=\"sort\">\r\n          <el-input-number v-model=\"menuForm.sort\" :min=\"0\" placeholder=\"请输入排序号\"></el-input-number>\r\n        </el-form-item>\r\n        \r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"submitMenuForm\">提交</el-button>\r\n          <el-button @click=\"resetForm\">重置</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport axios from 'axios';\r\nimport { ElMessage, ElMessageBox, ElForm } from 'element-plus';\r\nimport { onMounted, reactive, ref, toRefs } from 'vue';\r\n\r\n// 树配置\r\nconst props = {\r\n  id: 'id',\r\n  label: 'label',\r\n  children: 'subMenus'\r\n}\r\n\r\n// 数据状态\r\nconst treeNodeList = ref([])\r\nconst treeRef = ref(null)\r\nconst currentNodeId = ref(0)\r\nconst expandedKeys = ref([])\r\nconst formRef = ref<InstanceType<typeof ElForm>>()\r\n\r\n// 表单数据和验证规则\r\nconst menuForm = reactive({\r\n  label: '',\r\n  path: '',\r\n  icon: '',\r\n  sort: 0,\r\n  pid: 0\r\n})\r\n\r\nconst rules = reactive({\r\n  label: [\r\n    { required: true, message: '请输入菜单名称', trigger: 'blur' }\r\n  ],\r\n  path: [\r\n    { required: true, message: '请输入菜单路径', trigger: 'blur' }\r\n  ]\r\n})\r\n\r\n// 加载菜单树数据\r\nfunction loadMenuTree() {\r\n  axios.get(\"http://localhost:8081/listMenus\")\r\n    .then((response) => {\r\n      treeNodeList.value = response.data\r\n      expandedKeys.value = [1] // 默认展开根节点\r\n    })\r\n    .catch((error) => {\r\n      ElMessage.error('加载菜单树失败，请稍后重试')\r\n      console.log(error)\r\n    })\r\n}\r\n\r\n// 生命周期钩子\r\nonMounted(() => {\r\n  loadMenuTree()\r\n})\r\n\r\n// 节点点击事件处理\r\nfunction handleNodeClick(data) {\r\n  currentNodeId.value = data.id\r\n  menuForm.pid = data.id\r\n}\r\n\r\n// 提交菜单表单\r\nfunction submitMenuForm() {\r\n  formRef.value?.validate((valid) => {\r\n    if (!valid) return false\r\n    \r\n    if (currentNodeId.value === 0) {\r\n      ElMessage.warning('请选择父节点')\r\n      return\r\n    }\r\n    \r\n    axios.post(\"http://localhost:8081/saveMenus\", menuForm)\r\n      .then((response) => {\r\n        if (response.data.code === 200) {\r\n          loadMenuTree()\r\n          resetForm()\r\n          ElMessage.success('菜单添加成功')\r\n        } else {\r\n          ElMessage.error(response.data.msg || '菜单添加失败')\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        ElMessage.error('服务器错误，请稍后重试')\r\n        console.log(error)\r\n      })\r\n  })\r\n}\r\n\r\n// 重置表单\r\nfunction resetForm() {\r\n  menuForm.label = ''\r\n  menuForm.path = ''\r\n  menuForm.icon = ''\r\n  menuForm.sort = 0\r\n  currentNodeId.value = 0\r\n  menuForm.pid = 0\r\n}\r\n\r\n// 添加子菜单\r\nfunction append(data) {\r\n  currentNodeId.value = data.id\r\n  menuForm.pid = data.id\r\n  // 可以在这里添加自动填充表单的逻辑\r\n}\r\n\r\n// 删除菜单\r\nfunction remove(node, data) {\r\n  if (node.childNodes.length > 0) {\r\n    ElMessage.warning('请先删除子菜单')\r\n    return\r\n  }\r\n  \r\n  ElMessageBox.confirm(\r\n    `确定要删除菜单 ${data.label} 吗？`,\r\n    '提示',\r\n    {\r\n      confirmButtonText: '确定',\r\n      cancelButtonText: '取消',\r\n      type: 'warning'\r\n    }\r\n  ).then(() => {\r\n    axios.post(\"http://localhost:8081/deleteMenu\", { id: data.id })\r\n      .then((response) => {\r\n        if (response.data.code === 200) {\r\n          loadMenuTree()\r\n          if (currentNodeId.value === data.id) {\r\n            resetForm()\r\n          }\r\n          ElMessage.success('菜单删除成功')\r\n        } else {\r\n          ElMessage.error(response.data.msg || '菜单删除失败')\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        ElMessage.error('服务器错误，请稍后重试')\r\n        console.log(error)\r\n      })\r\n  }).catch(() => {\r\n    // 取消操作\r\n  })\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  padding: 20px;\r\n  background-color: #fff;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.custom-tree-node {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 100%;\r\n}\r\n\r\n.el-tree-node__content {\r\n  height: 40px !important;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}