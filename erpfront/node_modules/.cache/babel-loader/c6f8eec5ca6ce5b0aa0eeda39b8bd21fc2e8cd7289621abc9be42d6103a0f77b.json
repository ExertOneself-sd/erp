{"ast":null,"code":"import AddCustomer from \"@/views/AddCustomer\";\nimport ListCustomer from \"@/views/ListCustomer\";\nimport { onMounted, ref, computed } from \"vue\";\nimport axios from 'axios';\nimport { ArrowDown } from '@element-plus/icons-vue';\n\n// 用户信息\n\nexport default {\n  __name: 'index',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const userName = ref('管理员');\n    const userAvatar = ref('https://cube.elemecdn.com/3/7c/3ea6beec64369c2642b92c6726f1epng.png');\n\n    // 当前路由名称\n    const currentRouteName = computed(() => {\n      return currentComponent.value === AddCustomer ? '添加客户' : '客户列表';\n    });\n\n    //声明数组保存所有组件\n    const views = [AddCustomer, ListCustomer];\n    //声明变量保存当前需要显示的组件名\n    const currentComponent = ref(views[0]);\n    //声明菜单对象集合数据\n    const menus = ref([]);\n    /*menu组件选中叶子节点触发的函数，参数index：菜单节点的index值，对应数据库菜单节点的id*/\n    const handlerSelect = function (id) {\n      console.log(id);\n      //发生ajax请求，加载组件下标\n      axios.get(\"http://localhost:8081/compIndex?id=\" + id).then(response => {\n        //动态该currentComponent赋值,从组件集合views中获取的组件名字\n        currentComponent.value = views[response.data];\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n    //页面加载，发生ajax请求加载左侧菜单信息\n    onMounted(function () {\n      axios.get(\"http://localhost:8081/listMenus\").then(response => {\n        console.log(response);\n        //将响应的数据绑定到menus，实现数据渲染\n        menus.value = response.data;\n      }).catch(error => {\n        console.log(error);\n      });\n    });\n    const __returned__ = {\n      userName,\n      userAvatar,\n      currentRouteName,\n      views,\n      currentComponent,\n      menus,\n      handlerSelect,\n      get AddCustomer() {\n        return AddCustomer;\n      },\n      get ListCustomer() {\n        return ListCustomer;\n      },\n      onMounted,\n      ref,\n      computed,\n      get axios() {\n        return axios;\n      },\n      get ArrowDown() {\n        return ArrowDown;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["AddCustomer","ListCustomer","onMounted","ref","computed","axios","ArrowDown","userName","userAvatar","currentRouteName","currentComponent","value","views","menus","handlerSelect","id","console","log","get","then","response","data","catch","error"],"sources":["D:/Program/Web QP/vue/erpfront/src/views/index.vue"],"sourcesContent":["<template>\n  <!-- 后台主页布局 -->\n  <div class=\"common-layout\">\n    <el-container>\n      <el-header class=\"top\">\n    <div class=\"header-content\">\n      <div class=\"breadcrumb\">\n        <el-breadcrumb separator=\"/\">\n          <el-breadcrumb-item :to=\"{ path: '/' }\">首页</el-breadcrumb-item>\n          <el-breadcrumb-item>{{ currentRouteName }}</el-breadcrumb-item>\n        </el-breadcrumb>\n      </div>\n      <div class=\"user-info\">\n        <el-dropdown>\n          <span class=\"el-dropdown-link\">\n            <el-avatar :size=\"30\" :src=\"userAvatar\" />\n            <span style=\"margin-left:8px\">{{ userName }}</span>\n            <el-icon class=\"el-icon--right\"><arrow-down /></el-icon>\n          </span>\n          <template #dropdown>\n            <el-dropdown-menu>\n              <el-dropdown-item>个人中心</el-dropdown-item>\n              <el-dropdown-item>修改密码</el-dropdown-item>\n              <el-dropdown-item divided>退出登录</el-dropdown-item>\n            </el-dropdown-menu>\n          </template>\n        </el-dropdown>\n      </div>\n    </div>\n  </el-header>\n      <el-container   >\n        <el-aside width=\"240px\" class=\"left\">\n          系统菜单\n\n          <!--添加Menu菜单组件-->\n          <el-menu\n              class=\"el-menu-vertical-demo\" @select=\"handlerSelect\" >\n            <el-sub-menu v-for=\"menu in menus\" :index=\"String(menu.id)\">\n              <template #title>\n                <span>{{ menu.label }}</span>\n              </template>\n              <el-menu-item v-for=\"subMenu in menu.subMenus\"  :index=\"String(subMenu.id)\">\n                {{subMenu.label}}\n              </el-menu-item>\n\n            </el-sub-menu>\n\n          </el-menu>\n        </el-aside>\n        <el-main class=\"right\">\n            <!--通过点击左边菜单，动态显示不同组件 -->\n<!--           <component :is=\"currentComponent\"></component>-->\n          <transition name=\"fade\" mode=\"out-in\">\n            <component :is=\"currentComponent\"></component>\n          </transition>\n        </el-main>\n      </el-container>\n    </el-container>\n  </div>\n</template>\n\n\n<script setup>\n  import AddCustomer from \"@/views/AddCustomer\";\n  import ListCustomer from \"@/views/ListCustomer\";\n  import {onMounted, ref, computed} from \"vue\";\n  import axios from 'axios';\n  import { ArrowDown } from '@element-plus/icons-vue';\n\n  // 用户信息\n  const userName = ref('管理员');\n  const userAvatar = ref('https://cube.elemecdn.com/3/7c/3ea6beec64369c2642b92c6726f1epng.png');\n  \n  // 当前路由名称\n  const currentRouteName = computed(() => {\n    return currentComponent.value === AddCustomer ? '添加客户' : '客户列表';\n  });\n  \n  //声明数组保存所有组件\n  const views=[AddCustomer,ListCustomer]\n  //声明变量保存当前需要显示的组件名\n  const currentComponent=ref(views[0]);\n  //声明菜单对象集合数据\n  const menus=ref([]);\n  /*menu组件选中叶子节点触发的函数，参数index：菜单节点的index值，对应数据库菜单节点的id*/\n  const  handlerSelect=function(id){\n    console.log(id);\n    //发生ajax请求，加载组件下标\n    axios.get(\"http://localhost:8081/compIndex?id=\"+id)\n    .then((response)=>{\n      //动态该currentComponent赋值,从组件集合views中获取的组件名字\n      currentComponent.value=views[response.data];\n    })\n    .catch((error)=>{\n          console.log(error);\n    });\n\n  }\n  //页面加载，发生ajax请求加载左侧菜单信息\n  onMounted(function(){\n    axios.get(\"http://localhost:8081/listMenus\")\n    .then((response)=>{\n      console.log(response);\n      //将响应的数据绑定到menus，实现数据渲染\n      menus.value=response.data;\n    })\n    .catch((error)=>{\n      console.log(error);\n    });\n  });\n</script>\n\n<style scoped>\n  .top{\n    background-color: azure;\n    padding-top: 15px;\n  }\n  .left{\n    background-color: blanchedalmond;\n    height: 600px;\n  }\n  .right{\n    background-color: cornsilk;\n  }\n\n/* 组件切换动画 */\n.fade-enter-active,\n.fade-leave-active {\n  transition: opacity 0.3s ease;\n}\n\n.fade-enter-from,\n.fade-leave-to {\n  opacity: 0;\n}\n\n/* 响应式设计 */\n@media (max-width: 768px) {\n  .el-aside {\n    width: 180px !important;\n  }\n  \n  .el-menu-vertical-demo:not(.el-menu--collapse) {\n    width: 180px;\n  }\n  \n  .top {\n    font-size: 16px;\n    padding: 0 10px;\n  }\n  \n  .right {\n    padding: 10px;\n  }\n}\n\n</style>"],"mappings":"AA+DE,OAAOA,WAAW,MAAM,qBAAqB;AAC7C,OAAOC,YAAY,MAAM,sBAAsB;AAC/C,SAAQC,SAAS,EAAEC,GAAG,EAAEC,QAAQ,QAAO,KAAK;AAC5C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,yBAAyB;;AAEnD;;;;;;;;IACA,MAAMC,QAAQ,GAAGJ,GAAG,CAAC,KAAK,CAAC;IAC3B,MAAMK,UAAU,GAAGL,GAAG,CAAC,qEAAqE,CAAC;;IAE7F;IACA,MAAMM,gBAAgB,GAAGL,QAAQ,CAAC,MAAM;MACtC,OAAOM,gBAAgB,CAACC,KAAK,KAAKX,WAAW,GAAG,MAAM,GAAG,MAAM;IACjE,CAAC,CAAC;;IAEF;IACA,MAAMY,KAAK,GAAC,CAACZ,WAAW,EAACC,YAAY;IACrC;IACA,MAAMS,gBAAgB,GAACP,GAAG,CAACS,KAAK,CAAC,CAAC,CAAC,CAAC;IACpC;IACA,MAAMC,KAAK,GAACV,GAAG,CAAC,EAAE,CAAC;IACnB;IACA,MAAOW,aAAa,GAAC,SAAAA,CAASC,EAAE,EAAC;MAC/BC,OAAO,CAACC,GAAG,CAACF,EAAE,CAAC;MACf;MACAV,KAAK,CAACa,GAAG,CAAC,qCAAqC,GAACH,EAAE,EACjDI,IAAI,CAAEC,QAAQ,IAAG;QAChB;QACAV,gBAAgB,CAACC,KAAK,GAACC,KAAK,CAACQ,QAAQ,CAACC,IAAI,CAAC;MAC7C,CAAC,EACAC,KAAK,CAAEC,KAAK,IAAG;QACVP,OAAO,CAACC,GAAG,CAACM,KAAK,CAAC;MACxB,CAAC,CAAC;IAEJ;IACA;IACArB,SAAS,CAAC,YAAU;MAClBG,KAAK,CAACa,GAAG,CAAC,iCAAiC,EAC1CC,IAAI,CAAEC,QAAQ,IAAG;QAChBJ,OAAO,CAACC,GAAG,CAACG,QAAQ,CAAC;QACrB;QACAP,KAAK,CAACF,KAAK,GAACS,QAAQ,CAACC,IAAI;MAC3B,CAAC,EACAC,KAAK,CAAEC,KAAK,IAAG;QACdP,OAAO,CAACC,GAAG,CAACM,KAAK,CAAC;MACpB,CAAC,CAAC;IACJ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}