{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport { onMounted, reactive, ref } from \"vue\";\nimport axios from \"axios\";\nimport { ElMessage } from \"element-plus\";\n//定义角色集合列表数据\n\nexport default {\n  __name: 'RoleManager',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const rolerList = ref([]);\n    const total = ref(0);\n    //发送请求加载角色列表\n    function queryRoleList(pageNum) {\n      axios.get(\"http://localhost:8081/rolerList?pageNum=\" + pageNum).then(response => {\n        rolerList.value = response.data.rolerList;\n        total.value = response.data.total;\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n    //加载页码调用函数\n    onMounted(function () {\n      queryRoleList(1);\n    });\n\n    //定义分页按钮函数\n    function rolerPageChange(pageNum) {\n      queryRoleList(pageNum);\n    }\n    //定义函数实现表格编辑效果\n    function handleEdit(row) {\n      row.edit = true;\n    }\n    //定义函数实现编辑后保存\n    function handleSave(row) {\n      //row.edit=false;\n      //console.log(row);\n      //发送ajax请求进行数据更新\n      axios.post(\"http://localhost:8081/updateRoler\", row).then(response => {\n        if (response.data.code == 200) {\n          row.edit = false;\n        }\n        ElMessage(response.data.msg);\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n\n    //////////////////////////////////////////////////////\n    //定义对话框状态\n    const dialogRoleVisible = ref(false);\n    //定义form表单\n    const rolerForm = reactive({\n      rname: '',\n      rdesc: ''\n    });\n    //定义打开添加角色信息的对话框\n    function openRoleDialog() {\n      dialogRoleVisible.value = true;\n    }\n    //定义函数提交角色信息保存的ajax请求\n    function saveRoleForm() {\n      axios.post(\"http://localhost:8081/saveRoler\", rolerForm).then(response => {\n        if (response.data.code == 200) {\n          dialogRoleVisible.value = false;\n          rolerForm.rname = '';\n          rolerForm.rdesc = '';\n        }\n        ElMessage(response.data.msg);\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n    function deleteRoler(id) {\n      axios.get(\"http://localhost:8081/deleteRoler/\" + id).then(response => {\n        if (response.data.code == 200) {\n          //刷新列表\n          queryRoleList(1);\n        }\n        ElMessage(response.data.msg);\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n    ///////////////////////////////////////授权/////////////////////////////////////\n    const dialogRoleMenusVisible = ref(false);\n    //tree控件参数配置\n    const props2 = {\n      id: 'id',\n      label: 'label',\n      children: 'subMenus'\n    };\n    //定义授权树节点集合数据\n    const treeNodeList2 = ref([]);\n    //定义树对象的引用\n    const treeRef = ref(null);\n    //声明变量保存角色id，在完成授权的时候使用\n    var global_rid = 0;\n    //定义函数打开角色授权对话框\n    function roleAndMenus(rid) {\n      global_rid = rid;\n      dialogRoleMenusVisible.value = true;\n      //发送ajax请求获得树节点数据\n      axios.get(\"http://localhost:8081/listMenus\").then(response => {\n        treeNodeList2.value = response.data;\n        //发送ajax请求，根据角色id，获得所有该角色对应的菜单id\n        axios.get(\"http://localhost:8081/loadRoleMid/\" + rid).then(response => {\n          //实现tree回显\n          treeRef.value.setCheckedKeys(response.data);\n          //treeRef.value.setCheckedKeys([2]);\n        }).catch(error => {\n          console.log(error);\n        });\n\n        //treeRef.value.setChecked(1)\n        //treeRef.value.setChecked(1,true,true);\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n    //定义实现角色菜单关闭保存的函数\n    function saveRolesMenus() {\n      //获得tree控件中被选中的节点,包含父节点\n      var nodes = treeRef.value.getCheckedNodes(false, true);\n      //声明数组\n      var arr = [global_rid];\n      nodes.forEach(item => {\n        arr.push(item.id);\n      });\n      console.log(arr);\n      axios.post(\"http://localhost:8081/grantRoleMenus\", arr).then(response => {\n        if (response.data.code == 200) {\n          //关闭对话框\n          dialogRoleMenusVisible.value = false;\n        }\n        ElMessage(response.data.msg);\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n    const __returned__ = {\n      rolerList,\n      total,\n      queryRoleList,\n      rolerPageChange,\n      handleEdit,\n      handleSave,\n      dialogRoleVisible,\n      rolerForm,\n      openRoleDialog,\n      saveRoleForm,\n      deleteRoler,\n      dialogRoleMenusVisible,\n      props2,\n      treeNodeList2,\n      treeRef,\n      get global_rid() {\n        return global_rid;\n      },\n      set global_rid(v) {\n        global_rid = v;\n      },\n      roleAndMenus,\n      saveRolesMenus,\n      onMounted,\n      reactive,\n      ref,\n      get axios() {\n        return axios;\n      },\n      get ElMessage() {\n        return ElMessage;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["onMounted","reactive","ref","axios","ElMessage","rolerList","total","queryRoleList","pageNum","get","then","response","value","data","catch","error","console","log","rolerPageChange","handleEdit","row","edit","handleSave","post","code","msg","dialogRoleVisible","rolerForm","rname","rdesc","openRoleDialog","saveRoleForm","deleteRoler","id","dialogRoleMenusVisible","props2","label","children","treeNodeList2","treeRef","global_rid","roleAndMenus","rid","setCheckedKeys","saveRolesMenus","nodes","getCheckedNodes","arr","forEach","item","push"],"sources":["D:/Program/Java QP/Erp/erpfront/src/views/RoleManager.vue"],"sourcesContent":["<template>\r\n  <h2>角色管理</h2>\r\n  <div style=\"text-align: left\">\r\n    <el-button type=\"primary\" @click=\"openRoleDialog\">添加角色</el-button>\r\n  </div>\r\n  <el-table :data=\"rolerList\" stripe style=\"width: 100%\">\r\n    <el-table-column prop=\"id\" label=\"编号\" width=\"180\"/>\r\n    <el-table-column  label=\"角色\" width=\"260\">\r\n      <template #default=\"scope\">\r\n        <el-input v-if=\"scope.row.edit\" v-model=\"scope.row.rname\"></el-input>\r\n        <span v-else>{{ scope.row.rname }}</span>\r\n      </template>\r\n\r\n    </el-table-column>\r\n    <el-table-column label=\"描述\">\r\n      <template #default=\"scope\">\r\n        <el-input v-if=\"scope.row.edit\" v-model=\"scope.row.rdesc\"></el-input>\r\n        <span v-else>{{ scope.row.rdesc }}</span>\r\n      </template>\r\n    </el-table-column>\r\n    <el-table-column align=\"right\">\r\n      <template #header>\r\n        <span>操作</span>\r\n      </template>\r\n      <template #default=\"scope\">\r\n        <el-button v-if=\"!scope.row.edit\" size=\"mini\"\r\n                   @click=\"handleEdit(scope.row)\">编辑</el-button>\r\n        <el-button v-else size=\"mini\" type=\"success\"\r\n                   @click=\"handleSave(scope.row)\">保存</el-button>\r\n        <el-button @click=\"deleteRoler(scope.row.id)\">删除</el-button>\r\n        <el-button @click=\"roleAndMenus(scope.row.id)\">授权</el-button>\r\n      </template>\r\n    </el-table-column>\r\n  </el-table>\r\n  <!-- 分页组件 -->\r\n  <hr/>\r\n  <el-pagination\r\n      small\r\n      background\r\n      :page-size=\"3\"\r\n      :pager-count=\"10\"\r\n      layout=\"prev, pager, next\"\r\n      :total=\"total\"\r\n      class=\"mt-4\" @current-change=\"rolerPageChange\"/>\r\n<!-- 角色信息对话框 -->\r\n  <!-- 回显客户信息的对话框 -->\r\n  <el-dialog\r\n      v-model=\"dialogRoleVisible\"\r\n      width=\"80%\"\r\n  >\r\n    <h2>角色信息</h2>\r\n\r\n    <!-- 对话框中添加form -->\r\n    <el-form :model=\"rolerForm\" label-width=\"120px\">\r\n      <el-form-item label=\"角色名称\">\r\n        <el-input v-model=\"rolerForm.rname\" style=\"width: 80%\"/>\r\n      </el-form-item>\r\n      <el-form-item label=\"角色描述\">\r\n        <el-input v-model=\"rolerForm.rdesc\" style=\"width: 80%\"/>\r\n\r\n\r\n      </el-form-item>\r\n\r\n\r\n      <el-form-item>\r\n        <el-button type=\"primary\" @click=\"saveRoleForm\">保存</el-button>\r\n        <el-button>取消</el-button>\r\n      </el-form-item>\r\n    </el-form>\r\n\r\n  </el-dialog>\r\n\r\n  <!-- 角色授权对话框 -->\r\n  <el-dialog\r\n      v-model=\"dialogRoleMenusVisible\"\r\n      width=\"50%\"\r\n  >\r\n    <h2>角色授权</h2>\r\n    <!--  添加tree组件  -->\r\n    <el-tree\r\n        :props=\"props2\"\r\n        :data=\"treeNodeList2\"\r\n        show-checkbox\r\n        default-expand-all\r\n        node-key=\"id\"\r\n\r\n        ref=\"treeRef\"/>\r\n    <!-- 添加按钮组件   -->\r\n    <el-button type=\"primary\" @click=\"saveRolesMenus\">保存权限</el-button>\r\n    <el-button type=\"success\">关闭授权</el-button>\r\n\r\n  </el-dialog>\r\n\r\n</template>\r\n\r\n<script setup>\r\nimport {onMounted, reactive, ref} from \"vue\";\r\n  import axios from \"axios\";\r\nimport {ElMessage} from \"element-plus\";\r\n  //定义角色集合列表数据\r\n  const rolerList=ref([]);\r\n  const total=ref(0);\r\n  //发送请求加载角色列表\r\n  function queryRoleList(pageNum){\r\n    axios.get(\"http://localhost:8081/rolerList?pageNum=\"+pageNum)\r\n    .then((response)=>{\r\n      rolerList.value=response.data.rolerList;\r\n      total.value=response.data.total;\r\n    })\r\n    .catch((error)=>{\r\n      console.log(error);\r\n    });\r\n  }\r\n  //加载页码调用函数\r\n  onMounted(function(){\r\n    queryRoleList(1);\r\n  })\r\n\r\n  //定义分页按钮函数\r\n  function rolerPageChange(pageNum){\r\n    queryRoleList(pageNum);\r\n  }\r\n  //定义函数实现表格编辑效果\r\n  function handleEdit(row){\r\n    row.edit=true;\r\n  }\r\n  //定义函数实现编辑后保存\r\n  function handleSave(row){\r\n    //row.edit=false;\r\n    //console.log(row);\r\n    //发送ajax请求进行数据更新\r\n    axios.post(\"http://localhost:8081/updateRoler\",row)\r\n    .then((response)=>{\r\n      if(response.data.code==200){\r\n        row.edit=false;\r\n      }\r\n      ElMessage(response.data.msg);\r\n    })\r\n    .catch((error)=>{\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  //////////////////////////////////////////////////////\r\n  //定义对话框状态\r\n  const dialogRoleVisible=ref(false);\r\n  //定义form表单\r\n  const rolerForm=reactive({\r\n    rname:'',\r\n    rdesc:''\r\n  });\r\n  //定义打开添加角色信息的对话框\r\n  function openRoleDialog(){\r\n    dialogRoleVisible.value=true;\r\n  }\r\n  //定义函数提交角色信息保存的ajax请求\r\n  function  saveRoleForm(){\r\n    axios.post(\"http://localhost:8081/saveRoler\",rolerForm)\r\n    .then((response)=>{\r\n      if(response.data.code==200){\r\n        dialogRoleVisible.value=false;\r\n        rolerForm.rname='';\r\n        rolerForm.rdesc='';\r\n      }\r\n      ElMessage(response.data.msg);\r\n    })\r\n    .catch((error)=>{\r\n      console.log(error);\r\n    })\r\n  }\r\n\r\n  function deleteRoler(id){\r\n    axios.get(\"http://localhost:8081/deleteRoler/\"+id)\r\n    .then((response)=>{\r\n      if(response.data.code==200){\r\n        //刷新列表\r\n        queryRoleList(1);\r\n      }\r\n      ElMessage(response.data.msg);\r\n    })\r\n    .catch((error)=>{\r\n      console.log(error);\r\n    })\r\n  }\r\n  ///////////////////////////////////////授权/////////////////////////////////////\r\n  const dialogRoleMenusVisible=ref(false);\r\n  //tree控件参数配置\r\n  const props2={\r\n    id:'id',\r\n    label:'label',\r\n    children:'subMenus'\r\n  };\r\n  //定义授权树节点集合数据\r\n  const treeNodeList2=ref([]);\r\n  //定义树对象的引用\r\n  const treeRef=ref(null);\r\n  //声明变量保存角色id，在完成授权的时候使用\r\n  var global_rid=0;\r\n//定义函数打开角色授权对话框\r\n  function roleAndMenus(rid){\r\n    global_rid=rid;\r\n    dialogRoleMenusVisible.value=true;\r\n    //发送ajax请求获得树节点数据\r\n    axios.get(\"http://localhost:8081/listMenus\")\r\n        .then((response)=>{\r\n          treeNodeList2.value=response.data;\r\n          //发送ajax请求，根据角色id，获得所有该角色对应的菜单id\r\n          axios.get(\"http://localhost:8081/loadRoleMid/\"+rid)\r\n          .then((response)=>{\r\n            //实现tree回显\r\n            treeRef.value.setCheckedKeys(response.data);\r\n            //treeRef.value.setCheckedKeys([2]);\r\n          })\r\n          .catch((error)=>{\r\n            console.log(error);\r\n          })\r\n\r\n          //treeRef.value.setChecked(1)\r\n          //treeRef.value.setChecked(1,true,true);\r\n        })\r\n        .catch((error)=>{\r\n          console.log(error);\r\n        })\r\n  }\r\n  //定义实现角色菜单关闭保存的函数\r\n  function saveRolesMenus(){\r\n    //获得tree控件中被选中的节点,包含父节点\r\n    var nodes = treeRef.value.getCheckedNodes(false,true);\r\n    //声明数组\r\n    var arr=[global_rid];\r\n    nodes.forEach((item)=>{\r\n      arr.push(item.id);\r\n    });\r\n    console.log(arr)\r\n    axios.post(\"http://localhost:8081/grantRoleMenus\",arr)\r\n        .then((response)=>{\r\n          if(response.data.code==200){\r\n            //关闭对话框\r\n            dialogRoleMenusVisible.value=false;\r\n          }\r\n          ElMessage(response.data.msg);\r\n        })\r\n        .catch((error)=>{\r\n          console.log(error);\r\n        })\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}