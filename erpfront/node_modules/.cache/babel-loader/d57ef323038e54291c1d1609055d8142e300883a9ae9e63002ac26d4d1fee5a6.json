{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"custom-tree-container\"\n};\nconst _hoisted_2 = {\n  class: \"custom-tree-node\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_tree = _resolveComponent(\"el-tree\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_cache[2] || (_cache[2] = _createElementVNode(\"h2\", null, \"添加菜单\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_el_tree, {\n    style: {\n      \"max-width\": \"600px\"\n    },\n    data: $setup.treeNodeList,\n    props: $setup.props,\n    \"show-checkbox\": \"\",\n    \"node-key\": \"id\",\n    \"default-expand-all\": \"\",\n    \"expand-on-click-node\": false,\n    ref: \"treeRef\",\n    onNodeClick: $setup.hanldNodeClick\n  }, {\n    default: _withCtx(({\n      node,\n      data\n    }) => [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"span\", null, _toDisplayString(node.label), 1 /* TEXT */), _createElementVNode(\"div\", null, [_createVNode(_component_el_button, {\n      type: \"primary\",\n      link: \"\",\n      onClick: $event => $setup.append(data)\n    }, {\n      default: _withCtx(() => _cache[0] || (_cache[0] = [_createTextVNode(\" 添加 \")])),\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"]), _createVNode(_component_el_button, {\n      style: {\n        \"margin-left\": \"4px\"\n      },\n      type: \"danger\",\n      link: \"\",\n      onClick: $event => $setup.remove(node, data)\n    }, {\n      default: _withCtx(() => _cache[1] || (_cache[1] = [_createTextVNode(\" 删除 \")])),\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])])])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"data\"])])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementBlock","_Fragment","_createElementVNode","_hoisted_1","_createVNode","_component_el_tree","style","data","$setup","treeNodeList","props","ref","onNodeClick","hanldNodeClick","default","_withCtx","node","_hoisted_2","_toDisplayString","label","_component_el_button","type","link","onClick","$event","append","_cache","_createTextVNode","_","remove"],"sources":["D:\\Program\\Java QP\\Erp\\erpfront\\src\\views\\AddMenus.vue"],"sourcesContent":["<template>\r\n  <h2>添加菜单</h2>\r\n  <div class=\"custom-tree-container\">\r\n    <el-tree\r\n      style=\"max-width: 600px\"\r\n      :data=\"treeNodeList\"\r\n      :props=\"props\"\r\n      show-checkbox\r\n      node-key=\"id\"\r\n      default-expand-all\r\n      :expand-on-click-node=\"false\"\r\n      ref=\"treeRef\"\r\n      @node-click=\"hanldNodeClick\"\r\n    >\r\n      <template #default=\"{ node, data }\">\r\n        <div class=\"custom-tree-node\">\r\n          <span>{{ node.label }}</span>\r\n          <div>\r\n            <el-button type=\"primary\" link @click=\"append(data)\">\r\n              添加\r\n            </el-button>\r\n            <el-button\r\n              style=\"margin-left: 4px\"\r\n              type=\"danger\"\r\n              link\r\n              @click=\"remove(node, data)\"\r\n            >\r\n              删除\r\n            </el-button>\r\n          </div>\r\n        </div>\r\n      </template>\r\n    </el-tree>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport axios from 'axios';\r\nimport { ElMessage } from 'element-plus';\r\nimport { onMounted, reactive, ref } from 'vue';\r\n\r\nconst props = {\r\n  id: 'id',\r\n  label: 'label',\r\n  children: 'subMenus'\r\n}\r\n\r\nconst treeNodeList = ref([])\r\nconst menuForm = reactive({\r\n    label:''\r\n})\r\n\r\nfunction loadMenuTree() {\r\n  axios.get(\"http://localhost:8081/listMenus\")\r\n  .then((response)=>{\r\n    treeNodeList.value = response.data\r\n  })\r\n  .catch((error)=>{\r\n    console.log(error)\r\n  })\r\n}\r\n\r\nonMounted(function(){\r\n  loadMenuTree()\r\n})\r\n\r\nvar id=0\r\n\r\nfunction hanldNodeClick(node){\r\n    console.log(node)\r\n    id=node.id\r\n}\r\n\r\nfunction append(data) {\r\n  menuForm.pid = data.id\r\n  ElMessage('请在下方输入新菜单名称')\r\n}\r\n\r\nfunction remove(node, data) {\r\n  axios.delete(`http://localhost:8081/deleteMenu/${data.id}`)\r\n    .then((response) => {\r\n      if(response.data.code === 200) {\r\n        loadMenuTree()\r\n        ElMessage.success('删除成功')\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      console.log(error)\r\n    })\r\n}\r\n\r\n</script>\r\n\r\n<style>\r\n.custom-tree-node {\r\n  flex: 1;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  font-size: 14px;\r\n  padding-right: 8px;\r\n}\r\n</style>"],"mappings":";;EAEOA,KAAK,EAAC;AAAuB;;EAavBA,KAAK,EAAC;AAAkB;;;;uBAfrCC,mBAAA,CAAAC,SAAA,S,0BACEC,mBAAA,CAAa,YAAT,MAAI,sBACRA,mBAAA,CA+BM,OA/BNC,UA+BM,GA9BJC,YAAA,CA6BUC,kBAAA;IA5BRC,KAAwB,EAAxB;MAAA;IAAA,CAAwB;IACvBC,IAAI,EAAEC,MAAA,CAAAC,YAAY;IAClBC,KAAK,EAAEF,MAAA,CAAAE,KAAK;IACb,eAAa,EAAb,EAAa;IACb,UAAQ,EAAC,IAAI;IACb,oBAAkB,EAAlB,EAAkB;IACjB,sBAAoB,EAAE,KAAK;IAC5BC,GAAG,EAAC,SAAS;IACZC,WAAU,EAAEJ,MAAA,CAAAK;;IAEFC,OAAO,EAAAC,QAAA,CAChB,CAeM;MAhBcC,IAAI;MAAET;IAAI,OAC9BL,mBAAA,CAeM,OAfNe,UAeM,GAdJf,mBAAA,CAA6B,cAAAgB,gBAAA,CAApBF,IAAI,CAACG,KAAK,kBACnBjB,mBAAA,CAYM,cAXJE,YAAA,CAEYgB,oBAAA;MAFDC,IAAI,EAAC,SAAS;MAACC,IAAI,EAAJ,EAAI;MAAEC,OAAK,EAAAC,MAAA,IAAEhB,MAAA,CAAAiB,MAAM,CAAClB,IAAI;;MAlB9DO,OAAA,EAAAC,QAAA,CAkBiE,MAErDW,MAAA,QAAAA,MAAA,OApBZC,gBAAA,CAkBiE,MAErD,E;MApBZC,CAAA;sDAqBYxB,YAAA,CAOYgB,oBAAA;MANVd,KAAwB,EAAxB;QAAA;MAAA,CAAwB;MACxBe,IAAI,EAAC,QAAQ;MACbC,IAAI,EAAJ,EAAI;MACHC,OAAK,EAAAC,MAAA,IAAEhB,MAAA,CAAAqB,MAAM,CAACb,IAAI,EAAET,IAAI;;MAzBvCO,OAAA,EAAAC,QAAA,CA0Ba,MAEDW,MAAA,QAAAA,MAAA,OA5BZC,gBAAA,CA0Ba,MAED,E;MA5BZC,CAAA;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}