{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createBlock as _createBlock, resolveDynamicComponent as _resolveDynamicComponent } from \"vue\";\nconst _hoisted_1 = {\n  class: \"common-layout\"\n};\nconst _hoisted_2 = {\n  class: \"content-card\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_header = _resolveComponent(\"el-header\");\n  const _component_el_menu_item = _resolveComponent(\"el-menu-item\");\n  const _component_el_sub_menu = _resolveComponent(\"el-sub-menu\");\n  const _component_el_menu = _resolveComponent(\"el-menu\");\n  const _component_el_aside = _resolveComponent(\"el-aside\");\n  const _component_el_main = _resolveComponent(\"el-main\");\n  const _component_el_container = _resolveComponent(\"el-container\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" 后台主页布局 \"), _createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_el_container, null, {\n    default: _withCtx(() => [_createCommentVNode(\" 头部使用 Element Plus 默认样式 \"), _createVNode(_component_el_header, {\n      class: \"el-header\"\n    }, {\n      default: _withCtx(() => _cache[0] || (_cache[0] = [_createTextVNode(\"ERP-七个瑞士卷小组\")])),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_container, null, {\n      default: _withCtx(() => [_createCommentVNode(\" 侧边栏使用 Element Plus 推荐宽度和样式 \"), _createVNode(_component_el_aside, {\n        width: \"240px\",\n        class: \"el-aside\"\n      }, {\n        default: _withCtx(() => [_cache[1] || (_cache[1] = _createElementVNode(\"h3\", {\n          class: \"menu-title\"\n        }, \"系统菜单\", -1 /* HOISTED */)), _createCommentVNode(\" 补充 Element Plus 菜单必要属性 \"), _createVNode(_component_el_menu, {\n          class: \"el-menu-vertical-demo\",\n          onSelect: $setup.handlerSelect,\n          \"default-active\": $setup.currentActive,\n          \"background-color\": \"#545c64\",\n          \"text-color\": \"#fff\",\n          \"active-text-color\": \"#ffd04b\"\n        }, {\n          default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.menus, menu => {\n            return _openBlock(), _createBlock(_component_el_sub_menu, {\n              index: String(menu.id)\n            }, {\n              title: _withCtx(() => [_createElementVNode(\"span\", null, _toDisplayString(menu.label), 1 /* TEXT */)]),\n              default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(menu.subMenus, subMenu => {\n                return _openBlock(), _createBlock(_component_el_menu_item, {\n                  index: String(subMenu.id)\n                }, {\n                  default: _withCtx(() => [_createTextVNode(_toDisplayString(subMenu.label), 1 /* TEXT */)]),\n                  _: 2 /* DYNAMIC */\n                }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"index\"]);\n              }), 256 /* UNKEYED_FRAGMENT */))]),\n              _: 2 /* DYNAMIC */\n            }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"index\"]);\n          }), 256 /* UNKEYED_FRAGMENT */))]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"default-active\"])]),\n        _: 1 /* STABLE */\n      }), _createCommentVNode(\" 主内容区域使用 Element Plus 默认填充 \"), _createVNode(_component_el_main, {\n        class: \"el-main\"\n      }, {\n        default: _withCtx(() => [_createCommentVNode(\" 添加Material卡片容器 \"), _createElementVNode(\"div\", _hoisted_2, [(_openBlock(), _createBlock(_resolveDynamicComponent($setup.currentComponent)))])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  })])], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementBlock","_Fragment","_createCommentVNode","_createElementVNode","_hoisted_1","_createVNode","_component_el_container","default","_withCtx","_component_el_header","_cache","_createTextVNode","_","_component_el_aside","width","_component_el_menu","onSelect","$setup","handlerSelect","currentActive","_renderList","menus","menu","_createBlock","_component_el_sub_menu","index","String","id","title","_toDisplayString","label","subMenus","subMenu","_component_el_menu_item","_component_el_main","_hoisted_2","_resolveDynamicComponent","currentComponent"],"sources":["D:\\Program\\Java QP\\Erp\\erpfront\\src\\views\\index.vue"],"sourcesContent":["<template>\n  <!-- 后台主页布局 -->\n  <div class=\"common-layout\">\n    <el-container>\n      <!-- 头部使用 Element Plus 默认样式 -->\n      <el-header class=\"el-header\">ERP-七个瑞士卷小组</el-header>\n      <el-container>\n        <!-- 侧边栏使用 Element Plus 推荐宽度和样式 -->\n        <el-aside width=\"240px\" class=\"el-aside\">\n          <h3 class=\"menu-title\">系统菜单</h3>\n          <!-- 补充 Element Plus 菜单必要属性 -->\n          <el-menu\n            class=\"el-menu-vertical-demo\"\n            @select=\"handlerSelect\"\n            :default-active=\"currentActive\"\n            background-color=\"#545c64\"\n            text-color=\"#fff\"\n            active-text-color=\"#ffd04b\"\n          >\n            <el-sub-menu v-for=\"menu in menus\" :index=\"String(menu.id)\">\n              <template #title>\n                <span>{{ menu.label }}</span>\n              </template>\n              <el-menu-item v-for=\"subMenu in menu.subMenus\"  :index=\"String(subMenu.id)\">\n                {{subMenu.label}}\n              </el-menu-item>\n            </el-sub-menu>\n          </el-menu>\n\n        </el-aside>\n        <!-- 主内容区域使用 Element Plus 默认填充 -->\n        <el-main class=\"el-main\">\n          <!-- 添加Material卡片容器 -->\n          <div class=\"content-card\">\n            <component :is=\"currentComponent\"></component>\n          </div>\n        </el-main>\n      </el-container>\n    </el-container>\n  </div>\n</template>\n\n<script setup>\nimport AddCustomer from \"@/views/AddCustomer\";\n  import ListCustomer from \"@/views/ListCustomer\";\n  import AddSellJiHui from \"@/views/AddSellJiHui\";\n  import ListSellJh from \"@/views/ListSellJh\";\n  import ListCustOrder from \"@/views/ListCustOrder.vue\";\n  import ListAfterSales from\"@/views/ListAfterSales.vue\"\n  import AddMenus from \"@/views/AddMenus.vue\";\n  import RoleManager from \"@/views/RoleManager.vue\";\n  import UserManager from \"@/views/UserManager.vue\";\n  import CategroryManager from \"@/views/CategroryManager.vue\";\n  import test from \"@/views/test.vue\"\n  import {onMounted, ref} from \"vue\";\n  import axios from 'axios';\nimport ListAfterSalesVue from \"./ListAfterSales.vue\";\n\n  // 声明当前激活的菜单id（新增）\n  const currentActive = ref('');\n  // 声明数组保存所有组件\n  const views=[AddCustomer,ListCustomer,ListAfterSalesVue,ListCustOrder,AddSellJiHui,,,ListSellJh,AddMenus,UserManager,RoleManager,CategroryManager]\n  //声明变量保存当前需要显示的组件名\n  const currentComponent=ref(views[0]);\n  //声明菜单对象集合数据\n  const menus=ref([]);\n  /*menu组件选中叶子节点触发的函数，参数index：菜单节点的index值，对应数据库菜单节点的id*/\n  const  handlerSelect=function(id){\n    console.log(id);\n    //发生axiosax请求，加载组件下标\n    axios.get(\"http://localhost:8081/compIndex?id=\"+id)\n    .then((response)=>{\n      //动态该currentComponent赋值,从组件集合views中获取的组件名字\n      currentComponent.value=views[response.data];\n    })\n    .catch((error)=>{\n          console.log(error);\n    });\n\n  }\n  //页面加载，发生ajax请求加载左侧菜单信息\n  onMounted(function(){\n    axios.get(\"http://localhost:8081/listMenus\")\n    .then((response)=>{\n      console.log(response);\n      //将响应的数据绑定到menus，实现数据渲染\n      menus.value=response.data;\n      // 初始化默认激活菜单（新增）\n      if(menus.value.length > 0 && menus.value[0].subMenus?.length > 0) {\n        currentActive.value = String(menus.value[0].subMenus[0].id);\n      }\n    })\n    .catch((error)=>{\n      console.log(error);\n    });\n  });\n</script>\n\n<style scoped>\n.el-header {\n  background-color: #1976d2; /* Material Design 主色（深蓝） */\n  color: #ffffff;\n  text-align: left; /* 左对齐更符合Material规范 */\n  padding: 0 24px; /* 左右内边距24px，垂直居中 */\n  font-size: 20px;\n  line-height: 64px; /* 高度64px（Material顶部栏标准高度） */\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); /* 添加底部阴影 */\n}\n\n.el-aside {\n  padding: 0;\n  background-color: #ffffff; /* 侧边栏改为白色背景 */\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.08); /* 右侧阴影增强层次感 */\n  height: 100vh;\n}\n\n.menu-title {\n  color: #212121; /* 深灰色标题 */\n  font-size: 16px;\n  padding: 24px 24px 16px; /* 调整内边距 */\n  border-bottom: 1px solid #eeeeee; /* 浅灰色分割线 */\n}\n/* 覆盖 Element Plus 侧边栏内边距（优化高度自适应） */\n.el-aside {\n  padding: 0;\n  background-color: #545c64; /* 与菜单背景色保持一致 */\n  height: 100vh; /* 改为视口高度百分比 */\n}\n\n/* 主内容区域原版内边距 */\n/* 主内容区域优化 */\n.el-main {\n  padding: 24px; /* 主区域内边距24px */\n  background-color: #f5f5f5; /* 浅灰色背景 */\n  min-height: calc(100vh - 64px); /* 顶部栏64px */\n}\n\n.content-card {\n  background-color: #ffffff; /* 卡片白色背景 */\n  border-radius: 8px; /* 卡片圆角 */\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.08); /* 卡片阴影 */\n  padding: 24px; /* 卡片内边距 */\n  min-height: calc(100% - 48px); /* 适应主区域内边距 */\n}\n</style>"],"mappings":";;EAEOA,KAAK,EAAC;AAAe;;EA+BbA,KAAK,EAAC;AAAc;;;;;;;;;uBAjCnCC,mBAAA,CAAAC,SAAA,SACEC,mBAAA,YAAe,EACfC,mBAAA,CAqCM,OArCNC,UAqCM,GApCJC,YAAA,CAmCeC,uBAAA;IAtCnBC,OAAA,EAAAC,QAAA,CAIM,MAA+B,CAA/BN,mBAAA,4BAA+B,EAC/BG,YAAA,CAAoDI,oBAAA;MAAzCV,KAAK,EAAC;IAAW;MALlCQ,OAAA,EAAAC,QAAA,CAKmC,MAAWE,MAAA,QAAAA,MAAA,OAL9CC,gBAAA,CAKmC,aAAW,E;MAL9CC,CAAA;QAMMP,YAAA,CA+BeC,uBAAA;MArCrBC,OAAA,EAAAC,QAAA,CAOQ,MAAmC,CAAnCN,mBAAA,gCAAmC,EACnCG,YAAA,CAqBWQ,mBAAA;QArBDC,KAAK,EAAC,OAAO;QAACf,KAAK,EAAC;;QARtCQ,OAAA,EAAAC,QAAA,CASU,MAAgC,C,0BAAhCL,mBAAA,CAAgC;UAA5BJ,KAAK,EAAC;QAAY,GAAC,MAAI,sBAC3BG,mBAAA,4BAA+B,EAC/BG,YAAA,CAgBUU,kBAAA;UAfRhB,KAAK,EAAC,uBAAuB;UAC5BiB,QAAM,EAAEC,MAAA,CAAAC,aAAa;UACrB,gBAAc,EAAED,MAAA,CAAAE,aAAa;UAC9B,kBAAgB,EAAC,SAAS;UAC1B,YAAU,EAAC,MAAM;UACjB,mBAAiB,EAAC;;UAjB9BZ,OAAA,EAAAC,QAAA,CAmByB,MAAqB,E,kBAAlCR,mBAAA,CAOcC,SAAA,QA1B1BmB,WAAA,CAmBwCH,MAAA,CAAAI,KAAK,EAAbC,IAAI;iCAAxBC,YAAA,CAOcC,sBAAA;cAPsBC,KAAK,EAAEC,MAAM,CAACJ,IAAI,CAACK,EAAE;;cAC5CC,KAAK,EAAApB,QAAA,CACd,MAA6B,CAA7BL,mBAAA,CAA6B,cAAA0B,gBAAA,CAApBP,IAAI,CAACQ,KAAK,iB;cArBnCvB,OAAA,EAAAC,QAAA,CAuB4B,MAAgC,E,kBAA9CR,mBAAA,CAEeC,SAAA,QAzB7BmB,WAAA,CAuB8CE,IAAI,CAACS,QAAQ,EAAxBC,OAAO;qCAA5BT,YAAA,CAEeU,uBAAA;kBAFkCR,KAAK,EAAEC,MAAM,CAACM,OAAO,CAACL,EAAE;;kBAvBvFpB,OAAA,EAAAC,QAAA,CAwBgB,MAAiB,CAxBjCG,gBAAA,CAAAkB,gBAAA,CAwBkBG,OAAO,CAACF,KAAK,iB;kBAxB/BlB,CAAA;;;cAAAA,CAAA;;;UAAAA,CAAA;;QAAAA,CAAA;UA8BQV,mBAAA,+BAAkC,EAClCG,YAAA,CAKU6B,kBAAA;QALDnC,KAAK,EAAC;MAAS;QA/BhCQ,OAAA,EAAAC,QAAA,CAgCU,MAAuB,CAAvBN,mBAAA,oBAAuB,EACvBC,mBAAA,CAEM,OAFNgC,UAEM,I,cADJZ,YAAA,CAA8Ca,wBAlC1D,CAkC4BnB,MAAA,CAAAoB,gBAAgB,I;QAlC5CzB,CAAA;;MAAAA,CAAA;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}